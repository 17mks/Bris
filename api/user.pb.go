// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: user.proto

package api

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Mobile      string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,4,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	PassWord    string `protobuf:"bytes,5,opt,name=passWord,proto3" json:"passWord,omitempty"`
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Source      string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	CreateTime  string `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *Users) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Users) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *Users) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Users) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *Users) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

func (x *Users) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Users) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Users) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Users) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type TbThirdAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlatForm    string `protobuf:"bytes,2,opt,name=platForm,proto3" json:"platForm,omitempty"`
	AccountType string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Account     string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	OuterUserID string `protobuf:"bytes,5,opt,name=outerUserID,proto3" json:"outerUserID,omitempty"`
	CreateTime  string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	TbUserID    string `protobuf:"bytes,8,opt,name=tbUserID,proto3" json:"tbUserID,omitempty"`
}

func (x *TbThirdAccount) Reset() {
	*x = TbThirdAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TbThirdAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TbThirdAccount) ProtoMessage() {}

func (x *TbThirdAccount) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TbThirdAccount.ProtoReflect.Descriptor instead.
func (*TbThirdAccount) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *TbThirdAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TbThirdAccount) GetPlatForm() string {
	if x != nil {
		return x.PlatForm
	}
	return ""
}

func (x *TbThirdAccount) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *TbThirdAccount) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *TbThirdAccount) GetOuterUserID() string {
	if x != nil {
		return x.OuterUserID
	}
	return ""
}

func (x *TbThirdAccount) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *TbThirdAccount) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *TbThirdAccount) GetTbUserID() string {
	if x != nil {
		return x.TbUserID
	}
	return ""
}

type UserDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           *Users            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo       *UserInfo1        `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	TbThirdAccount []*TbThirdAccount `protobuf:"bytes,3,rep,name=TbThirdAccount,proto3" json:"TbThirdAccount,omitempty"`
}

func (x *UserDetailInfo) Reset() {
	*x = UserDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailInfo) ProtoMessage() {}

func (x *UserDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailInfo.ProtoReflect.Descriptor instead.
func (*UserDetailInfo) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserDetailInfo) GetUser() *Users {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserDetailInfo) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserDetailInfo) GetTbThirdAccount() []*TbThirdAccount {
	if x != nil {
		return x.TbThirdAccount
	}
	return nil
}

type UserCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *UserCreateRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo *UserInfo1              `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *UserCreateRequest) Reset() {
	*x = UserCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateRequest) ProtoMessage() {}

func (x *UserCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateRequest.ProtoReflect.Descriptor instead.
func (*UserCreateRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserCreateRequest) GetUser() *UserCreateRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserCreateRequest) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserCreateResponse) Reset() {
	*x = UserCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateResponse) ProtoMessage() {}

func (x *UserCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateResponse.ProtoReflect.Descriptor instead.
func (*UserCreateResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserCreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserDeleteRequest) Reset() {
	*x = UserDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteRequest) ProtoMessage() {}

func (x *UserDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteRequest.ProtoReflect.Descriptor instead.
func (*UserDeleteRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserDeleteResponse) Reset() {
	*x = UserDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteResponse) ProtoMessage() {}

func (x *UserDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteResponse.ProtoReflect.Descriptor instead.
func (*UserDeleteResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserDeleteResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *UserUpdateRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo *UserInfo1              `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *UserUpdateRequest) Reset() {
	*x = UserUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateRequest) ProtoMessage() {}

func (x *UserUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserUpdateRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserUpdateRequest) GetUser() *UserUpdateRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserUpdateRequest) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *UserUpdateResponse_User            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo      *UserInfo1                          `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	ThirdAccounts []*UserUpdateResponse_Thirdaccounts `protobuf:"bytes,3,rep,name=thirdAccounts,proto3" json:"thirdAccounts,omitempty"`
}

func (x *UserUpdateResponse) Reset() {
	*x = UserUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateResponse) ProtoMessage() {}

func (x *UserUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateResponse.ProtoReflect.Descriptor instead.
func (*UserUpdateResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *UserUpdateResponse) GetUser() *UserUpdateResponse_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserUpdateResponse) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserUpdateResponse) GetThirdAccounts() []*UserUpdateResponse_Thirdaccounts {
	if x != nil {
		return x.ThirdAccounts
	}
	return nil
}

type UserDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserDetailRequest) Reset() {
	*x = UserDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailRequest) ProtoMessage() {}

func (x *UserDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailRequest.ProtoReflect.Descriptor instead.
func (*UserDetailRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *UserDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *UserDetailResponse_User            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo      *UserInfo1                          `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	ThirdAccounts []*UserDetailResponse_Thirdaccounts `protobuf:"bytes,3,rep,name=thirdAccounts,proto3" json:"thirdAccounts,omitempty"`
	Orgs          []*UserDetailResponse_Orgs          `protobuf:"bytes,4,rep,name=orgs,proto3" json:"orgs,omitempty"`
	Roles         []*UserDetailResponse_Roles         `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserDetailResponse) Reset() {
	*x = UserDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse) ProtoMessage() {}

func (x *UserDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse.ProtoReflect.Descriptor instead.
func (*UserDetailResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *UserDetailResponse) GetUser() *UserDetailResponse_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserDetailResponse) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserDetailResponse) GetThirdAccounts() []*UserDetailResponse_Thirdaccounts {
	if x != nil {
		return x.ThirdAccounts
	}
	return nil
}

func (x *UserDetailResponse) GetOrgs() []*UserDetailResponse_Orgs {
	if x != nil {
		return x.Orgs
	}
	return nil
}

func (x *UserDetailResponse) GetRoles() []*UserDetailResponse_Roles {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32                    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                    `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter  *UserFilterRequest_Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *UserFilterRequest) Reset() {
	*x = UserFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterRequest) ProtoMessage() {}

func (x *UserFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterRequest.ProtoReflect.Descriptor instead.
func (*UserFilterRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *UserFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserFilterRequest) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *UserFilterRequest) GetFilter() *UserFilterRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type UserFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32                        `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                        `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Results []*UserFilterResponse_Results `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Total   uint32                        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *UserFilterResponse) Reset() {
	*x = UserFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse) ProtoMessage() {}

func (x *UserFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse.ProtoReflect.Descriptor instead.
func (*UserFilterResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *UserFilterResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserFilterResponse) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *UserFilterResponse) GetResults() []*UserFilterResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *UserFilterResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserImportRequest_Nested `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserImportRequest) Reset() {
	*x = UserImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserImportRequest) ProtoMessage() {}

func (x *UserImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserImportRequest.ProtoReflect.Descriptor instead.
func (*UserImportRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserImportRequest) GetItems() []*UserImportRequest_Nested {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *UserImportResponse) Reset() {
	*x = UserImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserImportResponse) ProtoMessage() {}

func (x *UserImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserImportResponse.ProtoReflect.Descriptor instead.
func (*UserImportResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *UserImportResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UserSignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Pwd        string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
}

func (x *UserSignInRequest) Reset() {
	*x = UserSignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInRequest) ProtoMessage() {}

func (x *UserSignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInRequest.ProtoReflect.Descriptor instead.
func (*UserSignInRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserSignInRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserSignInRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *UserSignInRequest) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type UserSignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	OpenId string `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId,omitempty"`
}

func (x *UserSignInResponse) Reset() {
	*x = UserSignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse) ProtoMessage() {}

func (x *UserSignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse.ProtoReflect.Descriptor instead.
func (*UserSignInResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *UserSignInResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserSignInResponse) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type UserRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile     string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	AutoSignIn bool   `protobuf:"varint,4,opt,name=autoSignIn,proto3" json:"autoSignIn,omitempty"`
}

func (x *UserRegisterRequest) Reset() {
	*x = UserRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterRequest) ProtoMessage() {}

func (x *UserRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterRequest.ProtoReflect.Descriptor instead.
func (*UserRegisterRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *UserRegisterRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserRegisterRequest) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *UserRegisterRequest) GetAutoSignIn() bool {
	if x != nil {
		return x.AutoSignIn
	}
	return false
}

type UserRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserRegisterResponse) Reset() {
	*x = UserRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterResponse) ProtoMessage() {}

func (x *UserRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterResponse.ProtoReflect.Descriptor instead.
func (*UserRegisterResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *UserRegisterResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserCertificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdNumber      string `protobuf:"bytes,1,opt,name=idNumber,proto3" json:"idNumber,omitempty"`
	RealName      string `protobuf:"bytes,2,opt,name=realName,proto3" json:"realName,omitempty"`
	FrontPhotoUrl string `protobuf:"bytes,3,opt,name=frontPhotoUrl,proto3" json:"frontPhotoUrl,omitempty"`
	BackPhotoUrl  string `protobuf:"bytes,4,opt,name=backPhotoUrl,proto3" json:"backPhotoUrl,omitempty"`
}

func (x *UserCertificationRequest) Reset() {
	*x = UserCertificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCertificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCertificationRequest) ProtoMessage() {}

func (x *UserCertificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCertificationRequest.ProtoReflect.Descriptor instead.
func (*UserCertificationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *UserCertificationRequest) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *UserCertificationRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserCertificationRequest) GetFrontPhotoUrl() string {
	if x != nil {
		return x.FrontPhotoUrl
	}
	return ""
}

func (x *UserCertificationRequest) GetBackPhotoUrl() string {
	if x != nil {
		return x.BackPhotoUrl
	}
	return ""
}

type UserCertificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Err       string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=requestId,proto3" json:"requestId,omitempty"`
}

func (x *UserCertificationResponse) Reset() {
	*x = UserCertificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCertificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCertificationResponse) ProtoMessage() {}

func (x *UserCertificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCertificationResponse.ProtoReflect.Descriptor instead.
func (*UserCertificationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *UserCertificationResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserCertificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserCertificationResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *UserCertificationResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UserPwdResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken string `protobuf:"bytes,1,opt,name=userToken,proto3" json:"userToken,omitempty"`
}

func (x *UserPwdResetRequest) Reset() {
	*x = UserPwdResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPwdResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPwdResetRequest) ProtoMessage() {}

func (x *UserPwdResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPwdResetRequest.ProtoReflect.Descriptor instead.
func (*UserPwdResetRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *UserPwdResetRequest) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

type UserPwdResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile     string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	NewPwd     string `protobuf:"bytes,3,opt,name=newPwd,proto3" json:"newPwd,omitempty"`
}

func (x *UserPwdResetResponse) Reset() {
	*x = UserPwdResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPwdResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPwdResetResponse) ProtoMessage() {}

func (x *UserPwdResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPwdResetResponse.ProtoReflect.Descriptor instead.
func (*UserPwdResetResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *UserPwdResetResponse) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserPwdResetResponse) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *UserPwdResetResponse) GetNewPwd() string {
	if x != nil {
		return x.NewPwd
	}
	return ""
}

type UserBindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile       string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	VerifyCode   string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`
	OpenId       string `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`
	AutoRegister bool   `protobuf:"varint,4,opt,name=autoRegister,proto3" json:"autoRegister,omitempty"`
}

func (x *UserBindRequest) Reset() {
	*x = UserBindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindRequest) ProtoMessage() {}

func (x *UserBindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindRequest.ProtoReflect.Descriptor instead.
func (*UserBindRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *UserBindRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserBindRequest) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *UserBindRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserBindRequest) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

type UserBindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserBindResponse) Reset() {
	*x = UserBindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindResponse) ProtoMessage() {}

func (x *UserBindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindResponse.ProtoReflect.Descriptor instead.
func (*UserBindResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *UserBindResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserCreateRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,2,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Mobile      string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Source      string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserCreateRequest_User) Reset() {
	*x = UserCreateRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateRequest_User) ProtoMessage() {}

func (x *UserCreateRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateRequest_User.ProtoReflect.Descriptor instead.
func (*UserCreateRequest_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UserCreateRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserCreateRequest_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserCreateRequest_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserCreateRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserCreateRequest_User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserCreateRequest_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserUpdateRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,2,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Mobile      string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserUpdateRequest_User) Reset() {
	*x = UserUpdateRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateRequest_User) ProtoMessage() {}

func (x *UserUpdateRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateRequest_User.ProtoReflect.Descriptor instead.
func (*UserUpdateRequest_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UserUpdateRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserUpdateRequest_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserUpdateRequest_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserUpdateRequest_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserUpdateResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,3,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Id          string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Mobile      string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Source      string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	UpdateTime  string `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserUpdateResponse_User) Reset() {
	*x = UserUpdateResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateResponse_User) ProtoMessage() {}

func (x *UserUpdateResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateResponse_User.ProtoReflect.Descriptor instead.
func (*UserUpdateResponse_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UserUpdateResponse_User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserUpdateResponse_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserUpdateResponse_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserUpdateResponse_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserUpdateResponse_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateResponse_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserUpdateResponse_User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserUpdateResponse_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserUpdateResponse_User) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserUpdateResponse_Thirdaccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform    string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	AccountType string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Account     string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	OuterUserId string `protobuf:"bytes,5,opt,name=outerUserId,proto3" json:"outerUserId,omitempty"`
	TbUserId    string `protobuf:"bytes,6,opt,name=tbUserId,proto3" json:"tbUserId,omitempty"`
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserUpdateResponse_Thirdaccounts) Reset() {
	*x = UserUpdateResponse_Thirdaccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateResponse_Thirdaccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateResponse_Thirdaccounts) ProtoMessage() {}

func (x *UserUpdateResponse_Thirdaccounts) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateResponse_Thirdaccounts.ProtoReflect.Descriptor instead.
func (*UserUpdateResponse_Thirdaccounts) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8, 1}
}

func (x *UserUpdateResponse_Thirdaccounts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetOuterUserId() string {
	if x != nil {
		return x.OuterUserId
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetTbUserId() string {
	if x != nil {
		return x.TbUserId
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserUpdateResponse_Thirdaccounts) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserDetailResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,3,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Id          string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Mobile      string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Source      string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	UpdateTime  string `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserDetailResponse_User) Reset() {
	*x = UserDetailResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse_User) ProtoMessage() {}

func (x *UserDetailResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse_User.ProtoReflect.Descriptor instead.
func (*UserDetailResponse_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 0}
}

func (x *UserDetailResponse_User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserDetailResponse_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDetailResponse_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserDetailResponse_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetailResponse_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserDetailResponse_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserDetailResponse_User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserDetailResponse_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserDetailResponse_User) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserDetailResponse_Thirdaccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform    string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	AccountType string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Account     string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	OuterUserId string `protobuf:"bytes,5,opt,name=outerUserId,proto3" json:"outerUserId,omitempty"`
	TbUserId    string `protobuf:"bytes,6,opt,name=tbUserId,proto3" json:"tbUserId,omitempty"`
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserDetailResponse_Thirdaccounts) Reset() {
	*x = UserDetailResponse_Thirdaccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse_Thirdaccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse_Thirdaccounts) ProtoMessage() {}

func (x *UserDetailResponse_Thirdaccounts) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse_Thirdaccounts.ProtoReflect.Descriptor instead.
func (*UserDetailResponse_Thirdaccounts) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 1}
}

func (x *UserDetailResponse_Thirdaccounts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetOuterUserId() string {
	if x != nil {
		return x.OuterUserId
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetTbUserId() string {
	if x != nil {
		return x.TbUserId
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserDetailResponse_Thirdaccounts) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserDetailResponse_Orgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Pid         string `protobuf:"bytes,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Owner       string `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	PrefixTag   string `protobuf:"bytes,8,opt,name=prefixTag,proto3" json:"prefixTag,omitempty"`
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserDetailResponse_Orgs) Reset() {
	*x = UserDetailResponse_Orgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse_Orgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse_Orgs) ProtoMessage() {}

func (x *UserDetailResponse_Orgs) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse_Orgs.ProtoReflect.Descriptor instead.
func (*UserDetailResponse_Orgs) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 2}
}

func (x *UserDetailResponse_Orgs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetPrefixTag() string {
	if x != nil {
		return x.PrefixTag
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserDetailResponse_Orgs) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserDetailResponse_Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level       string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Tag         string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserDetailResponse_Roles) Reset() {
	*x = UserDetailResponse_Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse_Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse_Roles) ProtoMessage() {}

func (x *UserDetailResponse_Roles) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse_Roles.ProtoReflect.Descriptor instead.
func (*UserDetailResponse_Roles) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10, 3}
}

func (x *UserDetailResponse_Roles) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserDetailResponse_Roles) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserFilterRequest_Notin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Org string   `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *UserFilterRequest_Notin) Reset() {
	*x = UserFilterRequest_Notin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterRequest_Notin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterRequest_Notin) ProtoMessage() {}

func (x *UserFilterRequest_Notin) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterRequest_Notin.ProtoReflect.Descriptor instead.
func (*UserFilterRequest_Notin) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UserFilterRequest_Notin) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UserFilterRequest_Notin) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

type UserFilterRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids     []string                 `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Key     string                   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Sources []string                 `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	Status  string                   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	NotIn   *UserFilterRequest_Notin `protobuf:"bytes,5,opt,name=notIn,proto3" json:"notIn,omitempty"`
}

func (x *UserFilterRequest_Filter) Reset() {
	*x = UserFilterRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterRequest_Filter) ProtoMessage() {}

func (x *UserFilterRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterRequest_Filter.ProtoReflect.Descriptor instead.
func (*UserFilterRequest_Filter) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11, 1}
}

func (x *UserFilterRequest_Filter) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UserFilterRequest_Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserFilterRequest_Filter) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *UserFilterRequest_Filter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserFilterRequest_Filter) GetNotIn() *UserFilterRequest_Notin {
	if x != nil {
		return x.NotIn
	}
	return nil
}

type UserFilterResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime  string `protobuf:"bytes,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,3,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Id          string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Mobile      string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Source      string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	UpdateTime  string `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserFilterResponse_User) Reset() {
	*x = UserFilterResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse_User) ProtoMessage() {}

func (x *UserFilterResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse_User.ProtoReflect.Descriptor instead.
func (*UserFilterResponse_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UserFilterResponse_User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserFilterResponse_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserFilterResponse_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserFilterResponse_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserFilterResponse_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserFilterResponse_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserFilterResponse_User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserFilterResponse_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserFilterResponse_User) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserFilterResponse_Thirdaccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform    string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	AccountType string `protobuf:"bytes,3,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Account     string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	OuterUserId string `protobuf:"bytes,5,opt,name=outerUserId,proto3" json:"outerUserId,omitempty"`
	TbUserId    string `protobuf:"bytes,6,opt,name=tbUserId,proto3" json:"tbUserId,omitempty"`
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserFilterResponse_Thirdaccounts) Reset() {
	*x = UserFilterResponse_Thirdaccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse_Thirdaccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse_Thirdaccounts) ProtoMessage() {}

func (x *UserFilterResponse_Thirdaccounts) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse_Thirdaccounts.ProtoReflect.Descriptor instead.
func (*UserFilterResponse_Thirdaccounts) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 1}
}

func (x *UserFilterResponse_Thirdaccounts) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetOuterUserId() string {
	if x != nil {
		return x.OuterUserId
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetTbUserId() string {
	if x != nil {
		return x.TbUserId
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserFilterResponse_Thirdaccounts) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserFilterResponse_Orgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Pid         string `protobuf:"bytes,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Owner       string `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	PrefixTag   string `protobuf:"bytes,8,opt,name=prefixTag,proto3" json:"prefixTag,omitempty"`
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserFilterResponse_Orgs) Reset() {
	*x = UserFilterResponse_Orgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse_Orgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse_Orgs) ProtoMessage() {}

func (x *UserFilterResponse_Orgs) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse_Orgs.ProtoReflect.Descriptor instead.
func (*UserFilterResponse_Orgs) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 2}
}

func (x *UserFilterResponse_Orgs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetPrefixTag() string {
	if x != nil {
		return x.PrefixTag
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserFilterResponse_Orgs) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserFilterResponse_Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level       string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Tag         string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *UserFilterResponse_Roles) Reset() {
	*x = UserFilterResponse_Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse_Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse_Roles) ProtoMessage() {}

func (x *UserFilterResponse_Roles) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse_Roles.ProtoReflect.Descriptor instead.
func (*UserFilterResponse_Roles) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 3}
}

func (x *UserFilterResponse_Roles) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserFilterResponse_Roles) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type UserFilterResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          *UserFilterResponse_User            `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo      *UserInfo1                          `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	ThirdAccounts []*UserFilterResponse_Thirdaccounts `protobuf:"bytes,3,rep,name=thirdAccounts,proto3" json:"thirdAccounts,omitempty"`
	Orgs          []*UserFilterResponse_Orgs          `protobuf:"bytes,4,rep,name=orgs,proto3" json:"orgs,omitempty"`
	Roles         []*UserFilterResponse_Roles         `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserFilterResponse_Results) Reset() {
	*x = UserFilterResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilterResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilterResponse_Results) ProtoMessage() {}

func (x *UserFilterResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilterResponse_Results.ProtoReflect.Descriptor instead.
func (*UserFilterResponse_Results) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12, 4}
}

func (x *UserFilterResponse_Results) GetUser() *UserFilterResponse_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserFilterResponse_Results) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserFilterResponse_Results) GetThirdAccounts() []*UserFilterResponse_Thirdaccounts {
	if x != nil {
		return x.ThirdAccounts
	}
	return nil
}

func (x *UserFilterResponse_Results) GetOrgs() []*UserFilterResponse_Orgs {
	if x != nil {
		return x.Orgs
	}
	return nil
}

func (x *UserFilterResponse_Results) GetRoles() []*UserFilterResponse_Roles {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserImportRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	EmployeeNum string `protobuf:"bytes,2,opt,name=employeeNum,proto3" json:"employeeNum,omitempty"`
	Mobile      string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password    string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Source      string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Status      string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserImportRequest_User) Reset() {
	*x = UserImportRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserImportRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserImportRequest_User) ProtoMessage() {}

func (x *UserImportRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserImportRequest_User.ProtoReflect.Descriptor instead.
func (*UserImportRequest_User) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UserImportRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserImportRequest_User) GetEmployeeNum() string {
	if x != nil {
		return x.EmployeeNum
	}
	return ""
}

func (x *UserImportRequest_User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserImportRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserImportRequest_User) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserImportRequest_User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserImportRequest_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform    string                  `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	AccountType string                  `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Account     string                  `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	OuterUserId string                  `protobuf:"bytes,4,opt,name=outerUserId,proto3" json:"outerUserId,omitempty"`
	User        *UserImportRequest_User `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	UserInfo    *UserInfo1              `protobuf:"bytes,6,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *UserImportRequest_Nested) Reset() {
	*x = UserImportRequest_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserImportRequest_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserImportRequest_Nested) ProtoMessage() {}

func (x *UserImportRequest_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserImportRequest_Nested.ProtoReflect.Descriptor instead.
func (*UserImportRequest_Nested) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13, 1}
}

func (x *UserImportRequest_Nested) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UserImportRequest_Nested) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *UserImportRequest_Nested) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserImportRequest_Nested) GetOuterUserId() string {
	if x != nil {
		return x.OuterUserId
	}
	return ""
}

func (x *UserImportRequest_Nested) GetUser() *UserImportRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserImportRequest_Nested) GetUserInfo() *UserInfo1 {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x54, 0x62, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x99, 0x01, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x31, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0e, 0x54,
	0x62, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x62, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x54, 0x62, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf8, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x52, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x31, 0x42, 0x26, 0xba, 0x47, 0x23, 0xba, 0x01, 0x08, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x92, 0x02, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x9f, 0xba, 0xe7, 0xa1, 0x80,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe8, 0xa1, 0xa8, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0xdd, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17,
	0xba, 0x01, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92, 0x02, 0x0c, 0xe9, 0x82, 0xae, 0xe7, 0xae,
	0xb1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42,
	0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba, 0x01, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c, 0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe5,
	0xb7, 0xa5, 0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0xba, 0x01, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x92, 0x02, 0x09, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x02, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0x47, 0x12, 0xba, 0x01,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x92, 0x02, 0x06, 0xe8, 0xb5, 0x84, 0xe6, 0xba, 0x90,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xba, 0x47, 0x2e, 0xba, 0x01, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x22, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7,
	0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0xad, 0xa3, 0xe5, 0xb8, 0xb8,
	0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5, 0xae, 0x9a, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92,
	0x02, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xc9, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x31, 0x42, 0x26, 0xba, 0x47, 0x23, 0xba, 0x01, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x92, 0x02, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88,
	0xb7, 0xe5, 0x9f, 0xba, 0xe7, 0xa1, 0x80, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe8, 0xa1, 0xa8,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xae, 0x02, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92,
	0x02, 0x0c, 0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba,
	0x01, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c,
	0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe5, 0xb7, 0xa5, 0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0xba, 0x01,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x92, 0x02, 0x09, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba,
	0xe5, 0x8f, 0xb7, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba,
	0x47, 0x14, 0xba, 0x01, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x02, 0x06,
	0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x31, 0xba, 0x47, 0x2e, 0xba, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02,
	0x22, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef,
	0xbc, 0x9a, 0xe6, 0xad, 0xa3, 0xe5, 0xb8, 0xb8, 0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5,
	0xae, 0x9a, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd3, 0x07, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x31, 0x42, 0x26, 0xba, 0x47, 0x23, 0xba, 0x01, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x92, 0x02, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0x9f, 0xba, 0xe7, 0xa1, 0x80, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe8, 0xa1, 0xa8, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xf1, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a,
	0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92, 0x02, 0x0c, 0xe9, 0x82,
	0xae, 0xe7, 0xae, 0xb1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba, 0x01, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c, 0xe5, 0x86, 0x85, 0xe9,
	0x83, 0xa8, 0xe5, 0xb7, 0xa5, 0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xba, 0x47, 0x15, 0xba, 0x01, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x92, 0x02, 0x09, 0xe6,
	0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x92, 0x02, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xba,
	0x47, 0x2e, 0xba, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x22, 0xe8, 0xb4,
	0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef, 0xbc, 0x9a, 0xe6,
	0xad, 0xa3, 0xe5, 0xb8, 0xb8, 0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5, 0xae, 0x9a, 0x29,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47,
	0x1c, 0xba, 0x01, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02,
	0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xf5, 0x01, 0x0a, 0x0d, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x84, 0x14, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x31, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x72, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x92, 0x02, 0x0f, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89,
	0xe6, 0x96, 0xb9, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x6f, 0x72, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4f, 0x72, 0x67, 0x73, 0x42, 0x16, 0xba, 0x47, 0x13, 0xba, 0x01, 0x04, 0x4f, 0x72, 0x67, 0x73,
	0x92, 0x02, 0x09, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe8, 0xa1, 0xa8, 0x52, 0x04, 0x6f, 0x72,
	0x67, 0x73, 0x12, 0x4c, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x92, 0x02, 0x09,
	0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe8, 0xa1, 0xa8, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x1a, 0xf1, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba,
	0x47, 0x1c, 0xba, 0x01, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92,
	0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17, 0xba, 0x01,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92, 0x02, 0x0c, 0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0xe5,
	0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x0a, 0x0b,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba, 0x01, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c, 0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe5, 0xb7, 0xa5,
	0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47,
	0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7,
	0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0xba, 0x01,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x92, 0x02, 0x09, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba,
	0xe5, 0x8f, 0xb7, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba,
	0x47, 0x14, 0xba, 0x01, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x02, 0x06,
	0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xba, 0x47, 0x2e, 0xba, 0x01, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x22, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7,
	0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0xad, 0xa3, 0xe5, 0xb8, 0xb8,
	0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5, 0xae, 0x9a, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6,
	0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0xbf, 0x04, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xba, 0x47, 0x34, 0xba, 0x01, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x92, 0x02, 0x26, 0xe7, 0xac, 0xac, 0xe4, 0xb8,
	0x89, 0xe6, 0x96, 0xb9, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0x28, 0x57, 0x43, 0xef, 0xbc, 0x9a,
	0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0x20, 0x42, 0x52, 0xef, 0xbc, 0x9a, 0x42, 0x52, 0x69, 0x73,
	0x29, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x7b, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x59, 0xba, 0x47, 0x56, 0xba, 0x01, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x92, 0x02, 0x45, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9, 0xe8,
	0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x28, 0x27, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x27, 0x2c, 0x20, 0x27, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x27, 0x2c, 0x20, 0x27,
	0x49, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x27, 0x2c, 0x20, 0x27, 0x45, 0x4d, 0x50,
	0x4c, 0x4f, 0x59, 0x45, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x27, 0x29, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92, 0x02, 0x15, 0xe7, 0xac, 0xac, 0xe4, 0xb8,
	0x89, 0xe6, 0x96, 0xb9, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c,
	0xba, 0x47, 0x29, 0xba, 0x01, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x92, 0x02, 0x18, 0xe5, 0xa4, 0x96, 0xe9, 0x83, 0xa8, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x0b, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x74, 0x62, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xba, 0x47, 0x1a,
	0xba, 0x01, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x74, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b,
	0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x82, 0x05, 0x0a, 0x04, 0x4f, 0x72, 0x67, 0x73, 0x12,
	0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14,
	0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe7, 0xbc,
	0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x47, 0x16, 0xba, 0x01, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0x47, 0x10, 0xba, 0x01, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x92, 0x02, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba,
	0x47, 0x15, 0xba, 0x01, 0x03, 0x70, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x88, 0xb6, 0xe7, 0xba,
	0xa7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xba,
	0x47, 0x19, 0xba, 0x01, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x92, 0x02, 0x0c, 0xe7,
	0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x92, 0x02, 0x0c, 0xe8, 0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe7, 0x94, 0xb5, 0xe8, 0xaf, 0x9d, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xba, 0x47, 0x1a, 0xba, 0x01, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x92, 0x02, 0x0f, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe6, 0x89, 0x80, 0xe6, 0x9c,
	0x89, 0xe8, 0x80, 0x85, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a,
	0xba, 0x47, 0x47, 0xba, 0x01, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x61, 0x67, 0x92,
	0x02, 0x38, 0xe5, 0x89, 0x8d, 0xe7, 0xbc, 0x80, 0xe6, 0xa0, 0x87, 0xe8, 0xae, 0xb0, 0x28, 0xe5,
	0x8a, 0xa9, 0xe8, 0xae, 0xb0, 0xe7, 0xac, 0xa6, 0xe7, 0x94, 0xa8, 0xe4, 0xba, 0x8e, 0xe5, 0x8c,
	0xba, 0xe5, 0x88, 0x86, 0xe4, 0xb8, 0x8d, 0xe5, 0x90, 0x8c, 0xe9, 0x99, 0xa2, 0xe5, 0x8c, 0xba,
	0xe7, 0x9a, 0x84, 0xe6, 0x82, 0xa3, 0xe8, 0x80, 0x85, 0x29, 0x52, 0x09, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x54, 0x61, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba,
	0x01, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x92, 0x02, 0x0c,
	0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba,
	0x47, 0x1c, 0xba, 0x01, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92,
	0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f,
	0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x92, 0x02, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xc8, 0x03, 0x0a, 0x05,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe8, 0xa7,
	0x92, 0xe8, 0x89, 0xb2, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x47,
	0x16, 0xba, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89,
	0xb2, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xba, 0x47,
	0x24, 0xba, 0x01, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x92, 0x02, 0x19, 0xe8, 0xa7, 0x92, 0xe8,
	0x89, 0xb2, 0xe7, 0xba, 0xa7, 0xe5, 0x88, 0xab, 0x28, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x2c,
	0x55, 0x53, 0x45, 0x52, 0x29, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x42, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xba, 0x47,
	0x27, 0xba, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x1b, 0xe8, 0xa7, 0x92,
	0xe8, 0x89, 0xb2, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0xe5, 0x90, 0xaf, 0xe7, 0x94, 0xa8,
	0x2c, 0xe5, 0x81, 0x9c, 0xe7, 0x94, 0xa8, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba,
	0x47, 0x0f, 0xba, 0x01, 0x03, 0x74, 0x61, 0x67, 0x92, 0x02, 0x06, 0xe5, 0xa4, 0x87, 0xe7, 0x94,
	0xa8, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17,
	0xba, 0x01, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x92, 0x02,
	0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b,
	0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x1a, 0x2b, 0x0a, 0x05, 0x4e, 0x6f, 0x74, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x1a, 0x92,
	0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6e, 0x52, 0x05, 0x6e, 0x6f,
	0x74, 0x49, 0x6e, 0x22, 0x96, 0x15, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x88, 0x04, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb,
	0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92,
	0x02, 0x0c, 0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba,
	0x01, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c,
	0xe5, 0x86, 0x85, 0xe9, 0x83, 0xa8, 0xe5, 0xb7, 0xa5, 0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92,
	0x02, 0x0c, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0xba, 0x01, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x92, 0x02, 0x09, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x02, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0x47, 0x12, 0xba, 0x01,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x92, 0x02, 0x06, 0xe8, 0xb5, 0x84, 0xe6, 0xba, 0x90,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xba, 0x47, 0x2e, 0xba, 0x01, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x22, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7,
	0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0xad, 0xa3, 0xe5, 0xb8, 0xb8,
	0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5, 0xae, 0x9a, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6,
	0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0xaf, 0x04, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xba, 0x47, 0x34, 0xba, 0x01, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x92, 0x02, 0x26, 0xe7, 0xac, 0xac, 0xe4, 0xb8,
	0x89, 0xe6, 0x96, 0xb9, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0x28, 0x57, 0x43, 0xef, 0xbc, 0x9a,
	0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0x20, 0x42, 0x52, 0xef, 0xbc, 0x9a, 0x42, 0x52, 0x69, 0x73,
	0x29, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x7b, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x59, 0xba, 0x47, 0x56, 0xba, 0x01, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x92, 0x02, 0x45, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9, 0xe8,
	0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x28, 0x27, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x27, 0x2c, 0x20, 0x27, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x27, 0x2c, 0x20, 0x27,
	0x49, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x27, 0x2c, 0x20, 0x27, 0x45, 0x4d, 0x50,
	0x4c, 0x4f, 0x59, 0x45, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x27, 0x29, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92, 0x02, 0x15, 0xe7, 0xac, 0xac, 0xe4, 0xb8,
	0x89, 0xe6, 0x96, 0xb9, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c,
	0xba, 0x47, 0x29, 0xba, 0x01, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x92, 0x02, 0x18, 0xe5, 0xa4, 0x96, 0xe9, 0x83, 0xa8, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x0b, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x74, 0x62, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xba, 0x47, 0x1a,
	0xba, 0x01, 0x08, 0x74, 0x62, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x08, 0x74, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b,
	0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x82, 0x05, 0x0a, 0x04, 0x4f, 0x72, 0x67, 0x73, 0x12,
	0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14,
	0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe7, 0xbc,
	0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x47, 0x16, 0xba, 0x01, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0x47, 0x10, 0xba, 0x01, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x92, 0x02, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba,
	0x47, 0x15, 0xba, 0x01, 0x03, 0x70, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe7, 0x88, 0xb6, 0xe7, 0xba,
	0xa7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xba,
	0x47, 0x19, 0xba, 0x01, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x92, 0x02, 0x0c, 0xe7,
	0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x92, 0x02, 0x0c, 0xe8, 0x81, 0x94, 0xe7, 0xb3, 0xbb, 0xe7, 0x94, 0xb5, 0xe8, 0xaf, 0x9d, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xba, 0x47, 0x1a, 0xba, 0x01, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x92, 0x02, 0x0f, 0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe6, 0x89, 0x80, 0xe6, 0x9c,
	0x89, 0xe8, 0x80, 0x85, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a,
	0xba, 0x47, 0x47, 0xba, 0x01, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x61, 0x67, 0x92,
	0x02, 0x38, 0xe5, 0x89, 0x8d, 0xe7, 0xbc, 0x80, 0xe6, 0xa0, 0x87, 0xe8, 0xae, 0xb0, 0x28, 0xe5,
	0x8a, 0xa9, 0xe8, 0xae, 0xb0, 0xe7, 0xac, 0xa6, 0xe7, 0x94, 0xa8, 0xe4, 0xba, 0x8e, 0xe5, 0x8c,
	0xba, 0xe5, 0x88, 0x86, 0xe4, 0xb8, 0x8d, 0xe5, 0x90, 0x8c, 0xe9, 0x99, 0xa2, 0xe5, 0x8c, 0xba,
	0xe7, 0x9a, 0x84, 0xe6, 0x82, 0xa3, 0xe8, 0x80, 0x85, 0x29, 0x52, 0x09, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x54, 0x61, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba,
	0x01, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x92, 0x02, 0x0c,
	0xe7, 0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba,
	0x47, 0x1c, 0xba, 0x01, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92,
	0x02, 0x0c, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f,
	0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x92, 0x02, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xc8, 0x03, 0x0a, 0x05,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x0c, 0xe8, 0xa7,
	0x92, 0xe8, 0x89, 0xb2, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba, 0x47,
	0x16, 0xba, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe8, 0xa7, 0x92, 0xe8, 0x89,
	0xb2, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xba, 0x47,
	0x24, 0xba, 0x01, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x92, 0x02, 0x19, 0xe8, 0xa7, 0x92, 0xe8,
	0x89, 0xb2, 0xe7, 0xba, 0xa7, 0xe5, 0x88, 0xab, 0x28, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x2c,
	0x55, 0x53, 0x45, 0x52, 0x29, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x42, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0xba, 0x47,
	0x27, 0xba, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x1b, 0xe8, 0xa7, 0x92,
	0xe8, 0x89, 0xb2, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0xe5, 0x90, 0xaf, 0xe7, 0x94, 0xa8,
	0x2c, 0xe5, 0x81, 0x9c, 0xe7, 0x94, 0xa8, 0x29, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba,
	0x47, 0x0f, 0xba, 0x01, 0x03, 0x74, 0x61, 0x67, 0x92, 0x02, 0x06, 0xe5, 0xa4, 0x87, 0xe7, 0x94,
	0xa8, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xba, 0x47, 0x17,
	0xba, 0x01, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x92, 0x02,
	0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b,
	0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xf3, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x31, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x72, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x25,
	0xba, 0x47, 0x22, 0xba, 0x01, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x92, 0x02, 0x0f, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9, 0xe8,
	0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x52, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x73,
	0x42, 0x16, 0xba, 0x47, 0x13, 0xba, 0x01, 0x04, 0x4f, 0x72, 0x67, 0x73, 0x92, 0x02, 0x09, 0xe7,
	0xbb, 0x84, 0xe7, 0xbb, 0x87, 0xe8, 0xa1, 0xa8, 0x52, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x12, 0x4c,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x17, 0xba, 0x47,
	0x14, 0xba, 0x01, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x92, 0x02, 0x09, 0xe8, 0xa7, 0x92, 0xe8,
	0x89, 0xb2, 0xe8, 0xa1, 0xa8, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xb9, 0x07, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xdd, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1a, 0xba, 0x47, 0x17, 0xba, 0x01, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x92, 0x02, 0x0c, 0xe9,
	0x82, 0xae, 0xe7, 0xae, 0xb1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0xba, 0x47, 0x1d, 0xba, 0x01, 0x0b, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x92, 0x02, 0x0c, 0xe5, 0x86, 0x85,
	0xe9, 0x83, 0xa8, 0xe5, 0xb7, 0xa5, 0xe5, 0x8f, 0xb7, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x47, 0x15, 0xba, 0x01, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x92, 0x02, 0x09, 0xe6, 0x89, 0x8b, 0xe6, 0x9c, 0xba, 0xe5, 0x8f, 0xb7,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x47, 0x14, 0xba,
	0x01, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x92, 0x02, 0x06, 0xe5, 0xaf, 0x86,
	0xe7, 0xa0, 0x81, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba,
	0x47, 0x12, 0xba, 0x01, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x92, 0x02, 0x06, 0xe8, 0xb5,
	0x84, 0xe6, 0xba, 0x90, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xba, 0x47,
	0x2e, 0xba, 0x01, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0x02, 0x22, 0xe8, 0xb4, 0xa6,
	0xe5, 0x8f, 0xb7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x28, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0xad,
	0xa3, 0xe5, 0xb8, 0xb8, 0x31, 0xef, 0xbc, 0x9a, 0xe9, 0x94, 0x81, 0xe5, 0xae, 0x9a, 0x29, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x8e, 0x04, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xba, 0x47, 0x34, 0xba, 0x01, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x92, 0x02, 0x26, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9,
	0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0x28, 0x57, 0x43, 0xef, 0xbc, 0x9a, 0xe5, 0xbe, 0xae, 0xe4,
	0xbf, 0xa1, 0x20, 0x42, 0x52, 0xef, 0xbc, 0x9a, 0x42, 0x52, 0x69, 0x73, 0x29, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x7b, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x59, 0xba, 0x47,
	0x56, 0xba, 0x01, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x92,
	0x02, 0x45, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f,
	0xb7, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x28, 0x27, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x27,
	0x2c, 0x20, 0x27, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x27, 0x2c, 0x20, 0x27, 0x49, 0x44, 0x5f, 0x4e,
	0x55, 0x4d, 0x42, 0x45, 0x52, 0x27, 0x2c, 0x20, 0x27, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59, 0x45,
	0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x27, 0x29, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x92, 0x02, 0x15, 0xe7, 0xac, 0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9,
	0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0xba, 0x47, 0x29, 0xba,
	0x01, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x92, 0x02, 0x18,
	0xe5, 0xa4, 0x96, 0xe9, 0x83, 0xa8, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x1c, 0xba, 0x47, 0x19, 0xba, 0x01, 0x04, 0x55, 0x73, 0x65, 0x72, 0x92, 0x02, 0x0f, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe8, 0xa1, 0xa8, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x31, 0x42, 0x26, 0xba, 0x47, 0x23, 0xba, 0x01, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x92, 0x02, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0x9f, 0xba, 0xe7, 0xa1, 0x80, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe8, 0xa1, 0xa8, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x5f, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x42, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x22, 0x2c, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x9c, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61,
	0x63, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x79,
	0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x13, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x66,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x65, 0x77, 0x50, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x65, 0x77, 0x50, 0x77, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22, 0x28,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xf8, 0x09, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x69, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x05, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a,
	0x01, 0x2a, 0xba, 0x47, 0x17, 0x12, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa1, 0xa8,
	0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xb7, 0xbb, 0xe5, 0x8a, 0xa0, 0x12, 0x6b, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba,
	0x47, 0x17, 0x12, 0x15, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa1, 0xa8, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x12, 0x69, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a,
	0x1a, 0x05, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x17, 0x12, 0x15, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa1, 0xa8, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0x12, 0x71, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x47, 0x1d, 0x12, 0x1b, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe8, 0xa1, 0xa8, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe8, 0xaf, 0xa6, 0xe6, 0x83,
	0x85, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x12, 0x76, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba,
	0x47, 0x1d, 0x12, 0x1b, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xa1, 0xa8, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x12,
	0x70, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x17, 0x12, 0x15, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe8, 0xa1, 0xa8, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xaf, 0xbc, 0xe5, 0x85,
	0xa5, 0x12, 0x66, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x0e, 0x12, 0x0c, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0x12, 0x6f, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x0e, 0x12, 0x0c, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0xba,
	0x47, 0x14, 0x12, 0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xae, 0x9e, 0xe5, 0x90, 0x8d,
	0xe8, 0xae, 0xa4, 0xe8, 0xaf, 0x81, 0x12, 0x7b, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x14, 0x12,
	0x12, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x87, 0x8d,
	0xe7, 0xbd, 0xae, 0x12, 0x6e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x6e, 0x64,
	0x3a, 0x01, 0x2a, 0xba, 0x47, 0x1d, 0x12, 0x1b, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0xac,
	0xac, 0xe4, 0xb8, 0x89, 0xe6, 0x96, 0xb9, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe7, 0xbb, 0x91,
	0xe5, 0xae, 0x9a, 0x42, 0x0e, 0x5a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_user_proto_goTypes = []interface{}{
	(*Users)(nil),                            // 0: api.Users
	(*TbThirdAccount)(nil),                   // 1: api.TbThirdAccount
	(*UserDetailInfo)(nil),                   // 2: api.UserDetailInfo
	(*UserCreateRequest)(nil),                // 3: api.UserCreateRequest
	(*UserCreateResponse)(nil),               // 4: api.UserCreateResponse
	(*UserDeleteRequest)(nil),                // 5: api.UserDeleteRequest
	(*UserDeleteResponse)(nil),               // 6: api.UserDeleteResponse
	(*UserUpdateRequest)(nil),                // 7: api.UserUpdateRequest
	(*UserUpdateResponse)(nil),               // 8: api.UserUpdateResponse
	(*UserDetailRequest)(nil),                // 9: api.UserDetailRequest
	(*UserDetailResponse)(nil),               // 10: api.UserDetailResponse
	(*UserFilterRequest)(nil),                // 11: api.UserFilterRequest
	(*UserFilterResponse)(nil),               // 12: api.UserFilterResponse
	(*UserImportRequest)(nil),                // 13: api.UserImportRequest
	(*UserImportResponse)(nil),               // 14: api.UserImportResponse
	(*UserSignInRequest)(nil),                // 15: api.UserSignInRequest
	(*UserSignInResponse)(nil),               // 16: api.UserSignInResponse
	(*UserRegisterRequest)(nil),              // 17: api.UserRegisterRequest
	(*UserRegisterResponse)(nil),             // 18: api.UserRegisterResponse
	(*UserCertificationRequest)(nil),         // 19: api.UserCertificationRequest
	(*UserCertificationResponse)(nil),        // 20: api.UserCertificationResponse
	(*UserPwdResetRequest)(nil),              // 21: api.UserPwdResetRequest
	(*UserPwdResetResponse)(nil),             // 22: api.UserPwdResetResponse
	(*UserBindRequest)(nil),                  // 23: api.UserBindRequest
	(*UserBindResponse)(nil),                 // 24: api.UserBindResponse
	(*UserCreateRequest_User)(nil),           // 25: api.UserCreateRequest.User
	(*UserUpdateRequest_User)(nil),           // 26: api.UserUpdateRequest.User
	(*UserUpdateResponse_User)(nil),          // 27: api.UserUpdateResponse.User
	(*UserUpdateResponse_Thirdaccounts)(nil), // 28: api.UserUpdateResponse.Thirdaccounts
	(*UserDetailResponse_User)(nil),          // 29: api.UserDetailResponse.User
	(*UserDetailResponse_Thirdaccounts)(nil), // 30: api.UserDetailResponse.Thirdaccounts
	(*UserDetailResponse_Orgs)(nil),          // 31: api.UserDetailResponse.Orgs
	(*UserDetailResponse_Roles)(nil),         // 32: api.UserDetailResponse.Roles
	(*UserFilterRequest_Notin)(nil),          // 33: api.UserFilterRequest.Notin
	(*UserFilterRequest_Filter)(nil),         // 34: api.UserFilterRequest.Filter
	(*UserFilterResponse_User)(nil),          // 35: api.UserFilterResponse.User
	(*UserFilterResponse_Thirdaccounts)(nil), // 36: api.UserFilterResponse.Thirdaccounts
	(*UserFilterResponse_Orgs)(nil),          // 37: api.UserFilterResponse.Orgs
	(*UserFilterResponse_Roles)(nil),         // 38: api.UserFilterResponse.Roles
	(*UserFilterResponse_Results)(nil),       // 39: api.UserFilterResponse.Results
	(*UserImportRequest_User)(nil),           // 40: api.UserImportRequest.User
	(*UserImportRequest_Nested)(nil),         // 41: api.UserImportRequest.Nested
	(*UserInfo1)(nil),                        // 42: api.UserInfo1
}
var file_user_proto_depIdxs = []int32{
	0,  // 0: api.UserDetailInfo.user:type_name -> api.Users
	42, // 1: api.UserDetailInfo.userInfo:type_name -> api.UserInfo1
	1,  // 2: api.UserDetailInfo.TbThirdAccount:type_name -> api.TbThirdAccount
	25, // 3: api.UserCreateRequest.user:type_name -> api.UserCreateRequest.User
	42, // 4: api.UserCreateRequest.userInfo:type_name -> api.UserInfo1
	26, // 5: api.UserUpdateRequest.user:type_name -> api.UserUpdateRequest.User
	42, // 6: api.UserUpdateRequest.userInfo:type_name -> api.UserInfo1
	27, // 7: api.UserUpdateResponse.user:type_name -> api.UserUpdateResponse.User
	42, // 8: api.UserUpdateResponse.userInfo:type_name -> api.UserInfo1
	28, // 9: api.UserUpdateResponse.thirdAccounts:type_name -> api.UserUpdateResponse.Thirdaccounts
	29, // 10: api.UserDetailResponse.user:type_name -> api.UserDetailResponse.User
	42, // 11: api.UserDetailResponse.userInfo:type_name -> api.UserInfo1
	30, // 12: api.UserDetailResponse.thirdAccounts:type_name -> api.UserDetailResponse.Thirdaccounts
	31, // 13: api.UserDetailResponse.orgs:type_name -> api.UserDetailResponse.Orgs
	32, // 14: api.UserDetailResponse.roles:type_name -> api.UserDetailResponse.Roles
	34, // 15: api.UserFilterRequest.filter:type_name -> api.UserFilterRequest.Filter
	39, // 16: api.UserFilterResponse.results:type_name -> api.UserFilterResponse.Results
	41, // 17: api.UserImportRequest.items:type_name -> api.UserImportRequest.Nested
	33, // 18: api.UserFilterRequest.Filter.notIn:type_name -> api.UserFilterRequest.Notin
	35, // 19: api.UserFilterResponse.Results.user:type_name -> api.UserFilterResponse.User
	42, // 20: api.UserFilterResponse.Results.userInfo:type_name -> api.UserInfo1
	36, // 21: api.UserFilterResponse.Results.thirdAccounts:type_name -> api.UserFilterResponse.Thirdaccounts
	37, // 22: api.UserFilterResponse.Results.orgs:type_name -> api.UserFilterResponse.Orgs
	38, // 23: api.UserFilterResponse.Results.roles:type_name -> api.UserFilterResponse.Roles
	40, // 24: api.UserImportRequest.Nested.user:type_name -> api.UserImportRequest.User
	42, // 25: api.UserImportRequest.Nested.userInfo:type_name -> api.UserInfo1
	3,  // 26: api.User.UserCreate:input_type -> api.UserCreateRequest
	5,  // 27: api.User.UserDelete:input_type -> api.UserDeleteRequest
	7,  // 28: api.User.UserUpdate:input_type -> api.UserUpdateRequest
	9,  // 29: api.User.UserDetail:input_type -> api.UserDetailRequest
	11, // 30: api.User.UserFilter:input_type -> api.UserFilterRequest
	13, // 31: api.User.UserImport:input_type -> api.UserImportRequest
	15, // 32: api.User.UserSignIn:input_type -> api.UserSignInRequest
	17, // 33: api.User.UserRegister:input_type -> api.UserRegisterRequest
	19, // 34: api.User.UserCertification:input_type -> api.UserCertificationRequest
	21, // 35: api.User.UserPwdReset:input_type -> api.UserPwdResetRequest
	23, // 36: api.User.UserBind:input_type -> api.UserBindRequest
	4,  // 37: api.User.UserCreate:output_type -> api.UserCreateResponse
	6,  // 38: api.User.UserDelete:output_type -> api.UserDeleteResponse
	8,  // 39: api.User.UserUpdate:output_type -> api.UserUpdateResponse
	10, // 40: api.User.UserDetail:output_type -> api.UserDetailResponse
	12, // 41: api.User.UserFilter:output_type -> api.UserFilterResponse
	14, // 42: api.User.UserImport:output_type -> api.UserImportResponse
	16, // 43: api.User.UserSignIn:output_type -> api.UserSignInResponse
	18, // 44: api.User.UserRegister:output_type -> api.UserRegisterResponse
	20, // 45: api.User.UserCertification:output_type -> api.UserCertificationResponse
	22, // 46: api.User.UserPwdReset:output_type -> api.UserPwdResetResponse
	24, // 47: api.User.UserBind:output_type -> api.UserBindResponse
	37, // [37:48] is the sub-list for method output_type
	26, // [26:37] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	file_userinfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TbThirdAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCertificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCertificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPwdResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPwdResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateResponse_Thirdaccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse_Thirdaccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse_Orgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse_Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterRequest_Notin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse_Thirdaccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse_Orgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse_Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilterResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserImportRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserImportRequest_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: formwarning.proto

package api

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Formwarning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignedTo          string `protobuf:"bytes,1,opt,name=assignedTo,proto3" json:"assignedTo,omitempty"`
	AssignedToName      string `protobuf:"bytes,2,opt,name=assignedToName,proto3" json:"assignedToName,omitempty"`
	AssignedType        string `protobuf:"bytes,3,opt,name=assignedType,proto3" json:"assignedType,omitempty"`
	CreateTime          string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	FieldValue          uint32 `protobuf:"varint,5,opt,name=fieldValue,proto3" json:"fieldValue,omitempty"`
	Id                  string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	PrincipalId         string `protobuf:"bytes,7,opt,name=principalId,proto3" json:"principalId,omitempty"`
	PrincipalName       string `protobuf:"bytes,8,opt,name=principalName,proto3" json:"principalName,omitempty"`
	PrincipalType       string `protobuf:"bytes,9,opt,name=principalType,proto3" json:"principalType,omitempty"`
	TbColumnThresholdId string `protobuf:"bytes,10,opt,name=tbColumnThresholdId,proto3" json:"tbColumnThresholdId,omitempty"`
	TbFormColumnId      string `protobuf:"bytes,11,opt,name=tbFormColumnId,proto3" json:"tbFormColumnId,omitempty"`
	TbFormRowId         string `protobuf:"bytes,12,opt,name=tbFormRowId,proto3" json:"tbFormRowId,omitempty"`
	UpdateTime          string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WarningInfo         string `protobuf:"bytes,14,opt,name=WarningInfo,proto3" json:"WarningInfo,omitempty"`
}

func (x *Formwarning) Reset() {
	*x = Formwarning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Formwarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Formwarning) ProtoMessage() {}

func (x *Formwarning) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Formwarning.ProtoReflect.Descriptor instead.
func (*Formwarning) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{0}
}

func (x *Formwarning) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *Formwarning) GetAssignedToName() string {
	if x != nil {
		return x.AssignedToName
	}
	return ""
}

func (x *Formwarning) GetAssignedType() string {
	if x != nil {
		return x.AssignedType
	}
	return ""
}

func (x *Formwarning) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Formwarning) GetFieldValue() uint32 {
	if x != nil {
		return x.FieldValue
	}
	return 0
}

func (x *Formwarning) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Formwarning) GetPrincipalId() string {
	if x != nil {
		return x.PrincipalId
	}
	return ""
}

func (x *Formwarning) GetPrincipalName() string {
	if x != nil {
		return x.PrincipalName
	}
	return ""
}

func (x *Formwarning) GetPrincipalType() string {
	if x != nil {
		return x.PrincipalType
	}
	return ""
}

func (x *Formwarning) GetTbColumnThresholdId() string {
	if x != nil {
		return x.TbColumnThresholdId
	}
	return ""
}

func (x *Formwarning) GetTbFormColumnId() string {
	if x != nil {
		return x.TbFormColumnId
	}
	return ""
}

func (x *Formwarning) GetTbFormRowId() string {
	if x != nil {
		return x.TbFormRowId
	}
	return ""
}

func (x *Formwarning) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Formwarning) GetWarningInfo() string {
	if x != nil {
		return x.WarningInfo
	}
	return ""
}

type FormWarningFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  *FormWarningFilterRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Page    uint32                           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                           `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *FormWarningFilterRequest) Reset() {
	*x = FormWarningFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningFilterRequest) ProtoMessage() {}

func (x *FormWarningFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningFilterRequest.ProtoReflect.Descriptor instead.
func (*FormWarningFilterRequest) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{1}
}

func (x *FormWarningFilterRequest) GetFilter() *FormWarningFilterRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *FormWarningFilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FormWarningFilterRequest) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type FormWarningFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32                               `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                               `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Results []*FormWarningFilterResponse_Results `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Total   uint32                               `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FormWarningFilterResponse) Reset() {
	*x = FormWarningFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningFilterResponse) ProtoMessage() {}

func (x *FormWarningFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningFilterResponse.ProtoReflect.Descriptor instead.
func (*FormWarningFilterResponse) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{2}
}

func (x *FormWarningFilterResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FormWarningFilterResponse) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *FormWarningFilterResponse) GetResults() []*FormWarningFilterResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *FormWarningFilterResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FormWarningXfilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  *FormWarningXfilterRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Page    uint32                            `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                            `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *FormWarningXfilterRequest) Reset() {
	*x = FormWarningXfilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterRequest) ProtoMessage() {}

func (x *FormWarningXfilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterRequest.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterRequest) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{3}
}

func (x *FormWarningXfilterRequest) GetFilter() *FormWarningXfilterRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *FormWarningXfilterRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FormWarningXfilterRequest) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type FormWarningXfilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32                                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32                                `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Results []*FormWarningXfilterResponse_Results `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Total   uint32                                `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FormWarningXfilterResponse) Reset() {
	*x = FormWarningXfilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterResponse) ProtoMessage() {}

func (x *FormWarningXfilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterResponse.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterResponse) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{4}
}

func (x *FormWarningXfilterResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FormWarningXfilterResponse) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *FormWarningXfilterResponse) GetResults() []*FormWarningXfilterResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *FormWarningXfilterResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FormWarningFilterRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	PrincipalMemId string   `protobuf:"bytes,2,opt,name=principalMemId,proto3" json:"principalMemId,omitempty"`
	Ids            []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *FormWarningFilterRequest_Filter) Reset() {
	*x = FormWarningFilterRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningFilterRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningFilterRequest_Filter) ProtoMessage() {}

func (x *FormWarningFilterRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningFilterRequest_Filter.ProtoReflect.Descriptor instead.
func (*FormWarningFilterRequest_Filter) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FormWarningFilterRequest_Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FormWarningFilterRequest_Filter) GetPrincipalMemId() string {
	if x != nil {
		return x.PrincipalMemId
	}
	return ""
}

func (x *FormWarningFilterRequest_Filter) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FormWarningFilterResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormWarning     *Formwarning      `protobuf:"bytes,1,opt,name=formWarning,proto3" json:"formWarning,omitempty"`
	ColumnThreshold *Columnthresholds `protobuf:"bytes,2,opt,name=columnThreshold,proto3" json:"columnThreshold,omitempty"`
	FormColumn      *Formcolumns      `protobuf:"bytes,3,opt,name=formColumn,proto3" json:"formColumn,omitempty"`
	FormRow         *Formrow          `protobuf:"bytes,4,opt,name=formRow,proto3" json:"formRow,omitempty"`
}

func (x *FormWarningFilterResponse_Results) Reset() {
	*x = FormWarningFilterResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningFilterResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningFilterResponse_Results) ProtoMessage() {}

func (x *FormWarningFilterResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningFilterResponse_Results.ProtoReflect.Descriptor instead.
func (*FormWarningFilterResponse_Results) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{2, 0}
}

func (x *FormWarningFilterResponse_Results) GetFormWarning() *Formwarning {
	if x != nil {
		return x.FormWarning
	}
	return nil
}

func (x *FormWarningFilterResponse_Results) GetColumnThreshold() *Columnthresholds {
	if x != nil {
		return x.ColumnThreshold
	}
	return nil
}

func (x *FormWarningFilterResponse_Results) GetFormColumn() *Formcolumns {
	if x != nil {
		return x.FormColumn
	}
	return nil
}

func (x *FormWarningFilterResponse_Results) GetFormRow() *Formrow {
	if x != nil {
		return x.FormRow
	}
	return nil
}

type FormWarningXfilterRequest_Createtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *FormWarningXfilterRequest_Createtime) Reset() {
	*x = FormWarningXfilterRequest_Createtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterRequest_Createtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterRequest_Createtime) ProtoMessage() {}

func (x *FormWarningXfilterRequest_Createtime) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterRequest_Createtime.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterRequest_Createtime) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{3, 0}
}

func (x *FormWarningXfilterRequest_Createtime) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *FormWarningXfilterRequest_Createtime) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type FormWarningXfilterRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrincipalType  string                                `protobuf:"bytes,1,opt,name=principalType,proto3" json:"principalType,omitempty"`
	PrincipalMemId string                                `protobuf:"bytes,2,opt,name=principalMemId,proto3" json:"principalMemId,omitempty"`
	Status         string                                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime     *FormWarningXfilterRequest_Createtime `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *FormWarningXfilterRequest_Filter) Reset() {
	*x = FormWarningXfilterRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterRequest_Filter) ProtoMessage() {}

func (x *FormWarningXfilterRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterRequest_Filter.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterRequest_Filter) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{3, 1}
}

func (x *FormWarningXfilterRequest_Filter) GetPrincipalType() string {
	if x != nil {
		return x.PrincipalType
	}
	return ""
}

func (x *FormWarningXfilterRequest_Filter) GetPrincipalMemId() string {
	if x != nil {
		return x.PrincipalMemId
	}
	return ""
}

func (x *FormWarningXfilterRequest_Filter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FormWarningXfilterRequest_Filter) GetCreateTime() *FormWarningXfilterRequest_Createtime {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type FormWarningXfilterResponse_Formwarnings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WarningInfo string `protobuf:"bytes,1,opt,name=warningInfo,proto3" json:"warningInfo,omitempty"`
	Level       uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *FormWarningXfilterResponse_Formwarnings) Reset() {
	*x = FormWarningXfilterResponse_Formwarnings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterResponse_Formwarnings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterResponse_Formwarnings) ProtoMessage() {}

func (x *FormWarningXfilterResponse_Formwarnings) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterResponse_Formwarnings.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterResponse_Formwarnings) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FormWarningXfilterResponse_Formwarnings) GetWarningInfo() string {
	if x != nil {
		return x.WarningInfo
	}
	return ""
}

func (x *FormWarningXfilterResponse_Formwarnings) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type FormWarningXfilterResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignedType   string                                     `protobuf:"bytes,1,opt,name=assignedType,proto3" json:"assignedType,omitempty"`
	AssignedTo     string                                     `protobuf:"bytes,2,opt,name=assignedTo,proto3" json:"assignedTo,omitempty"`
	Patient        *Patients                                  `protobuf:"bytes,3,opt,name=patient,proto3" json:"patient,omitempty"`
	AssignedToName string                                     `protobuf:"bytes,4,opt,name=assignedToName,proto3" json:"assignedToName,omitempty"`
	FormWarnings   []*FormWarningXfilterResponse_Formwarnings `protobuf:"bytes,5,rep,name=formWarnings,proto3" json:"formWarnings,omitempty"`
	MaxLevel       uint32                                     `protobuf:"varint,6,opt,name=maxLevel,proto3" json:"maxLevel,omitempty"`
	CreateTime     string                                     `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	FormRow        *Formrow                                   `protobuf:"bytes,8,opt,name=formRow,proto3" json:"formRow,omitempty"`
	Relate         *Relates                                   `protobuf:"bytes,9,opt,name=relate,proto3" json:"relate,omitempty"`
}

func (x *FormWarningXfilterResponse_Results) Reset() {
	*x = FormWarningXfilterResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formwarning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormWarningXfilterResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormWarningXfilterResponse_Results) ProtoMessage() {}

func (x *FormWarningXfilterResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_formwarning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormWarningXfilterResponse_Results.ProtoReflect.Descriptor instead.
func (*FormWarningXfilterResponse_Results) Descriptor() ([]byte, []int) {
	return file_formwarning_proto_rawDescGZIP(), []int{4, 1}
}

func (x *FormWarningXfilterResponse_Results) GetAssignedType() string {
	if x != nil {
		return x.AssignedType
	}
	return ""
}

func (x *FormWarningXfilterResponse_Results) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *FormWarningXfilterResponse_Results) GetPatient() *Patients {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *FormWarningXfilterResponse_Results) GetAssignedToName() string {
	if x != nil {
		return x.AssignedToName
	}
	return ""
}

func (x *FormWarningXfilterResponse_Results) GetFormWarnings() []*FormWarningXfilterResponse_Formwarnings {
	if x != nil {
		return x.FormWarnings
	}
	return nil
}

func (x *FormWarningXfilterResponse_Results) GetMaxLevel() uint32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *FormWarningXfilterResponse_Results) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *FormWarningXfilterResponse_Results) GetFormRow() *Formrow {
	if x != nil {
		return x.FormRow
	}
	return nil
}

func (x *FormWarningXfilterResponse_Results) GetRelate() *Relates {
	if x != nil {
		return x.Relate
	}
	return nil
}

var File_formwarning_proto protoreflect.FileDescriptor

var file_formwarning_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x6f, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x66, 0x6f, 0x72,
	0x6d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x66,
	0x6f, 0x72, 0x6d, 0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x07, 0x0a, 0x0b, 0x46, 0x6f,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba,
	0x47, 0x1c, 0xba, 0x01, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x92,
	0x02, 0x0c, 0xe6, 0x8c, 0x87, 0xe6, 0xb4, 0xbe, 0xe7, 0xbb, 0x99, 0xe8, 0xb0, 0x81, 0x52, 0x0a,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x51, 0x0a, 0x0e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x29, 0xba, 0x47, 0x26, 0xba, 0x01, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x12, 0xe8, 0xa2, 0xab, 0xe6, 0x8c,
	0x87, 0xe6, 0xb4, 0xbe, 0xe4, 0xba, 0xba, 0xe5, 0xa7, 0x93, 0xe5, 0x90, 0x8d, 0x52, 0x0e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x21, 0xba, 0x47, 0x1e, 0xba, 0x01, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x8c, 0x87, 0xe6, 0xb4, 0xbe,
	0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe5, 0x88, 0x9b,
	0xe5, 0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1c, 0xba, 0x47, 0x19, 0xba, 0x01,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x92, 0x02, 0x09, 0xe5, 0xad,
	0x97, 0xe6, 0xae, 0xb5, 0xe5, 0x80, 0xbc, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0xba, 0x47, 0x1a, 0xba, 0x01, 0x02, 0x69, 0x64, 0x92, 0x02, 0x12, 0xe5, 0xad, 0x97, 0xe6,
	0xae, 0xb5, 0xe9, 0xa2, 0x84, 0xe8, 0xad, 0xa6, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xba, 0x47, 0x26, 0xba, 0x01, 0x0b, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x92, 0x02, 0x15, 0xe8, 0xb4, 0x9f,
	0xe8, 0xb4, 0xa3, 0xe4, 0xba, 0xba, 0xe6, 0x88, 0x90, 0xe5, 0x91, 0x98, 0xe7, 0xbc, 0x96, 0xe7,
	0xa0, 0x81, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x4b, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01, 0x0d, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x0f, 0xe8, 0xb4,
	0x9f, 0xe8, 0xb4, 0xa3, 0xe4, 0xba, 0xba, 0xe5, 0xa7, 0x93, 0xe5, 0x90, 0x8d, 0x52, 0x0d, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0d,
	0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x25, 0xba, 0x47, 0x22, 0xba, 0x01, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x92, 0x02, 0x0f, 0xe8, 0xb4, 0x9f, 0xe8, 0xb4,
	0xa3, 0xe4, 0xba, 0xba, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6e,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x74, 0x62, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xba, 0x47, 0x2b, 0xba, 0x01, 0x13, 0x74, 0x62,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49,
	0x64, 0x92, 0x02, 0x12, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe9, 0x98, 0x88, 0xe5, 0x80, 0xbc,
	0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0x52, 0x13, 0x74, 0x62, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x0e, 0x74,
	0x62, 0x46, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x41, 0xba, 0x47, 0x3e, 0xba, 0x01, 0x0e, 0x74, 0x62, 0x46, 0x6f, 0x72,
	0x6d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x92, 0x02, 0x2a, 0xe5, 0xad, 0x97, 0xe6,
	0xae, 0xb5, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81, 0xef, 0xbc, 0x88, 0xe6, 0x98, 0xaf, 0xe5, 0x93,
	0xaa, 0xe4, 0xb8, 0xaa, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe7, 0x9a, 0x84, 0xe9, 0xa2, 0x84,
	0xe8, 0xad, 0xa6, 0xef, 0xbc, 0x89, 0x52, 0x0e, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0b, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d,
	0x52, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xba, 0x47, 0x20,
	0xba, 0x01, 0x0b, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x49, 0x64, 0x92, 0x02,
	0x0f, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe8, 0xa1, 0x8c, 0xe7, 0xbc, 0x96, 0xe7, 0xa0, 0x81,
	0x52, 0x0b, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x92, 0x02, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9,
	0x97, 0xb4, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xdc, 0x01, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x54, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0xfc, 0x02, 0x0a, 0x19, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x1a, 0xd8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x32, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x73, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x72, 0x6f, 0x77, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x22, 0x8a,
	0x03, 0x0a, 0x19, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x44, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0xb9, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x4d, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x49, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7, 0x05, 0x0a, 0x1a,
	0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x1a, 0x46, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0xe9, 0x03, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xba, 0x47, 0x1e,
	0xba, 0x01, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x92,
	0x02, 0x0c, 0xe6, 0x8c, 0x87, 0xe6, 0xb4, 0xbe, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1f, 0xba, 0x47, 0x1c, 0xba, 0x01, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x54, 0x6f, 0x92, 0x02, 0x0c, 0xe6, 0x8c, 0x87, 0xe6, 0xb4, 0xbe, 0xe7, 0xbb, 0x99, 0xe8, 0xb0,
	0x81, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x27, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x07, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29,
	0xba, 0x47, 0x26, 0xba, 0x01, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f,
	0x4e, 0x61, 0x6d, 0x65, 0x92, 0x02, 0x12, 0xe8, 0xa2, 0xab, 0xe6, 0x8c, 0x87, 0xe6, 0xb4, 0xbe,
	0xe4, 0xba, 0xba, 0xe5, 0xa7, 0x93, 0xe5, 0x90, 0x8d, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x54, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x66, 0x6f, 0x72,
	0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x58, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x66,
	0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x72, 0x6f, 0x77, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x12,
	0x24, 0x0a, 0x06, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x06, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x32, 0xc3, 0x02, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x20, 0x12, 0x1e,
	0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe9, 0xa2, 0x84, 0xe8, 0xad, 0xa6, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x12, 0x9a,
	0x01, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x6d, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x58, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15,
	0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x78, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x20, 0x12, 0x1e, 0xe8, 0xa1, 0xa8,
	0xe5, 0x8d, 0x95, 0xe9, 0xa2, 0x84, 0xe8, 0xad, 0xa6, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe8,
	0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x42, 0x0e, 0x5a, 0x0c, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_formwarning_proto_rawDescOnce sync.Once
	file_formwarning_proto_rawDescData = file_formwarning_proto_rawDesc
)

func file_formwarning_proto_rawDescGZIP() []byte {
	file_formwarning_proto_rawDescOnce.Do(func() {
		file_formwarning_proto_rawDescData = protoimpl.X.CompressGZIP(file_formwarning_proto_rawDescData)
	})
	return file_formwarning_proto_rawDescData
}

var file_formwarning_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_formwarning_proto_goTypes = []interface{}{
	(*Formwarning)(nil),                             // 0: api.Formwarning
	(*FormWarningFilterRequest)(nil),                // 1: api.FormWarningFilterRequest
	(*FormWarningFilterResponse)(nil),               // 2: api.FormWarningFilterResponse
	(*FormWarningXfilterRequest)(nil),               // 3: api.FormWarningXfilterRequest
	(*FormWarningXfilterResponse)(nil),              // 4: api.FormWarningXfilterResponse
	(*FormWarningFilterRequest_Filter)(nil),         // 5: api.FormWarningFilterRequest.Filter
	(*FormWarningFilterResponse_Results)(nil),       // 6: api.FormWarningFilterResponse.Results
	(*FormWarningXfilterRequest_Createtime)(nil),    // 7: api.FormWarningXfilterRequest.Createtime
	(*FormWarningXfilterRequest_Filter)(nil),        // 8: api.FormWarningXfilterRequest.Filter
	(*FormWarningXfilterResponse_Formwarnings)(nil), // 9: api.FormWarningXfilterResponse.Formwarnings
	(*FormWarningXfilterResponse_Results)(nil),      // 10: api.FormWarningXfilterResponse.Results
	(*Columnthresholds)(nil),                        // 11: api.Columnthresholds
	(*Formcolumns)(nil),                             // 12: api.Formcolumns
	(*Formrow)(nil),                                 // 13: api.Formrow
	(*Patients)(nil),                                // 14: api.Patients
	(*Relates)(nil),                                 // 15: api.Relates
}
var file_formwarning_proto_depIdxs = []int32{
	5,  // 0: api.FormWarningFilterRequest.filter:type_name -> api.FormWarningFilterRequest.Filter
	6,  // 1: api.FormWarningFilterResponse.results:type_name -> api.FormWarningFilterResponse.Results
	8,  // 2: api.FormWarningXfilterRequest.filter:type_name -> api.FormWarningXfilterRequest.Filter
	10, // 3: api.FormWarningXfilterResponse.results:type_name -> api.FormWarningXfilterResponse.Results
	0,  // 4: api.FormWarningFilterResponse.Results.formWarning:type_name -> api.Formwarning
	11, // 5: api.FormWarningFilterResponse.Results.columnThreshold:type_name -> api.Columnthresholds
	12, // 6: api.FormWarningFilterResponse.Results.formColumn:type_name -> api.Formcolumns
	13, // 7: api.FormWarningFilterResponse.Results.formRow:type_name -> api.Formrow
	7,  // 8: api.FormWarningXfilterRequest.Filter.createTime:type_name -> api.FormWarningXfilterRequest.Createtime
	14, // 9: api.FormWarningXfilterResponse.Results.patient:type_name -> api.Patients
	9,  // 10: api.FormWarningXfilterResponse.Results.formWarnings:type_name -> api.FormWarningXfilterResponse.Formwarnings
	13, // 11: api.FormWarningXfilterResponse.Results.formRow:type_name -> api.Formrow
	15, // 12: api.FormWarningXfilterResponse.Results.relate:type_name -> api.Relates
	1,  // 13: api.FormWarning.FormWarningFilter:input_type -> api.FormWarningFilterRequest
	3,  // 14: api.FormWarning.FormWarningXfilter:input_type -> api.FormWarningXfilterRequest
	2,  // 15: api.FormWarning.FormWarningFilter:output_type -> api.FormWarningFilterResponse
	4,  // 16: api.FormWarning.FormWarningXfilter:output_type -> api.FormWarningXfilterResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_formwarning_proto_init() }
func file_formwarning_proto_init() {
	if File_formwarning_proto != nil {
		return
	}
	file_columnthreshold_proto_init()
	file_formcolumn_proto_init()
	file_formrow_proto_init()
	file_patient_proto_init()
	file_relate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_formwarning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Formwarning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningFilterRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningFilterResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterRequest_Createtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterResponse_Formwarnings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formwarning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormWarningXfilterResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_formwarning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_formwarning_proto_goTypes,
		DependencyIndexes: file_formwarning_proto_depIdxs,
		MessageInfos:      file_formwarning_proto_msgTypes,
	}.Build()
	File_formwarning_proto = out.File
	file_formwarning_proto_rawDesc = nil
	file_formwarning_proto_goTypes = nil
	file_formwarning_proto_depIdxs = nil
}

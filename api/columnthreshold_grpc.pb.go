// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.10
// source: columnthreshold.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ColumnThresholdClient is the client API for ColumnThreshold service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ColumnThresholdClient interface {
	// 表单字段预警阈值表数据添加
	ColumnThresholdCreate(ctx context.Context, in *ColumnThresholdCreateRequest, opts ...grpc.CallOption) (*ColumnThresholdCreateResponse, error)
	// 表单字段预警阈值表数据删除
	ColumnThresholdDelete(ctx context.Context, in *ColumnThresholdDeleteRequest, opts ...grpc.CallOption) (*ColumnThresholdDeleteResponse, error)
	// 表单字段预警阈值表数据更新
	ColumnThresholdUpdate(ctx context.Context, in *ColumnThresholdUpdateRequest, opts ...grpc.CallOption) (*ColumnThresholdUpdateResponse, error)
	// 表单字段预警阈值表数据详情查询
	ColumnThresholdDetail(ctx context.Context, in *ColumnThresholdDetailRequest, opts ...grpc.CallOption) (*ColumnThresholdDetailResponse, error)
	// 表单字段预警阈值表数据过滤查询
	ColumnThresholdFilter(ctx context.Context, in *ColumnThresholdFilterRequest, opts ...grpc.CallOption) (*ColumnThresholdFilterResponse, error)
}

type columnThresholdClient struct {
	cc grpc.ClientConnInterface
}

func NewColumnThresholdClient(cc grpc.ClientConnInterface) ColumnThresholdClient {
	return &columnThresholdClient{cc}
}

func (c *columnThresholdClient) ColumnThresholdCreate(ctx context.Context, in *ColumnThresholdCreateRequest, opts ...grpc.CallOption) (*ColumnThresholdCreateResponse, error) {
	out := new(ColumnThresholdCreateResponse)
	err := c.cc.Invoke(ctx, "/api.ColumnThreshold/ColumnThresholdCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *columnThresholdClient) ColumnThresholdDelete(ctx context.Context, in *ColumnThresholdDeleteRequest, opts ...grpc.CallOption) (*ColumnThresholdDeleteResponse, error) {
	out := new(ColumnThresholdDeleteResponse)
	err := c.cc.Invoke(ctx, "/api.ColumnThreshold/ColumnThresholdDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *columnThresholdClient) ColumnThresholdUpdate(ctx context.Context, in *ColumnThresholdUpdateRequest, opts ...grpc.CallOption) (*ColumnThresholdUpdateResponse, error) {
	out := new(ColumnThresholdUpdateResponse)
	err := c.cc.Invoke(ctx, "/api.ColumnThreshold/ColumnThresholdUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *columnThresholdClient) ColumnThresholdDetail(ctx context.Context, in *ColumnThresholdDetailRequest, opts ...grpc.CallOption) (*ColumnThresholdDetailResponse, error) {
	out := new(ColumnThresholdDetailResponse)
	err := c.cc.Invoke(ctx, "/api.ColumnThreshold/ColumnThresholdDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *columnThresholdClient) ColumnThresholdFilter(ctx context.Context, in *ColumnThresholdFilterRequest, opts ...grpc.CallOption) (*ColumnThresholdFilterResponse, error) {
	out := new(ColumnThresholdFilterResponse)
	err := c.cc.Invoke(ctx, "/api.ColumnThreshold/ColumnThresholdFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ColumnThresholdServer is the server API for ColumnThreshold service.
// All implementations must embed UnimplementedColumnThresholdServer
// for forward compatibility
type ColumnThresholdServer interface {
	// 表单字段预警阈值表数据添加
	ColumnThresholdCreate(context.Context, *ColumnThresholdCreateRequest) (*ColumnThresholdCreateResponse, error)
	// 表单字段预警阈值表数据删除
	ColumnThresholdDelete(context.Context, *ColumnThresholdDeleteRequest) (*ColumnThresholdDeleteResponse, error)
	// 表单字段预警阈值表数据更新
	ColumnThresholdUpdate(context.Context, *ColumnThresholdUpdateRequest) (*ColumnThresholdUpdateResponse, error)
	// 表单字段预警阈值表数据详情查询
	ColumnThresholdDetail(context.Context, *ColumnThresholdDetailRequest) (*ColumnThresholdDetailResponse, error)
	// 表单字段预警阈值表数据过滤查询
	ColumnThresholdFilter(context.Context, *ColumnThresholdFilterRequest) (*ColumnThresholdFilterResponse, error)
	mustEmbedUnimplementedColumnThresholdServer()
}

// UnimplementedColumnThresholdServer must be embedded to have forward compatible implementations.
type UnimplementedColumnThresholdServer struct {
}

func (UnimplementedColumnThresholdServer) ColumnThresholdCreate(context.Context, *ColumnThresholdCreateRequest) (*ColumnThresholdCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnThresholdCreate not implemented")
}
func (UnimplementedColumnThresholdServer) ColumnThresholdDelete(context.Context, *ColumnThresholdDeleteRequest) (*ColumnThresholdDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnThresholdDelete not implemented")
}
func (UnimplementedColumnThresholdServer) ColumnThresholdUpdate(context.Context, *ColumnThresholdUpdateRequest) (*ColumnThresholdUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnThresholdUpdate not implemented")
}
func (UnimplementedColumnThresholdServer) ColumnThresholdDetail(context.Context, *ColumnThresholdDetailRequest) (*ColumnThresholdDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnThresholdDetail not implemented")
}
func (UnimplementedColumnThresholdServer) ColumnThresholdFilter(context.Context, *ColumnThresholdFilterRequest) (*ColumnThresholdFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnThresholdFilter not implemented")
}
func (UnimplementedColumnThresholdServer) mustEmbedUnimplementedColumnThresholdServer() {}

// UnsafeColumnThresholdServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ColumnThresholdServer will
// result in compilation errors.
type UnsafeColumnThresholdServer interface {
	mustEmbedUnimplementedColumnThresholdServer()
}

func RegisterColumnThresholdServer(s grpc.ServiceRegistrar, srv ColumnThresholdServer) {
	s.RegisterService(&ColumnThreshold_ServiceDesc, srv)
}

func _ColumnThreshold_ColumnThresholdCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnThresholdCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColumnThresholdServer).ColumnThresholdCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ColumnThreshold/ColumnThresholdCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColumnThresholdServer).ColumnThresholdCreate(ctx, req.(*ColumnThresholdCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColumnThreshold_ColumnThresholdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnThresholdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColumnThresholdServer).ColumnThresholdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ColumnThreshold/ColumnThresholdDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColumnThresholdServer).ColumnThresholdDelete(ctx, req.(*ColumnThresholdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColumnThreshold_ColumnThresholdUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnThresholdUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColumnThresholdServer).ColumnThresholdUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ColumnThreshold/ColumnThresholdUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColumnThresholdServer).ColumnThresholdUpdate(ctx, req.(*ColumnThresholdUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColumnThreshold_ColumnThresholdDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnThresholdDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColumnThresholdServer).ColumnThresholdDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ColumnThreshold/ColumnThresholdDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColumnThresholdServer).ColumnThresholdDetail(ctx, req.(*ColumnThresholdDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColumnThreshold_ColumnThresholdFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnThresholdFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColumnThresholdServer).ColumnThresholdFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ColumnThreshold/ColumnThresholdFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColumnThresholdServer).ColumnThresholdFilter(ctx, req.(*ColumnThresholdFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ColumnThreshold_ServiceDesc is the grpc.ServiceDesc for ColumnThreshold service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ColumnThreshold_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.ColumnThreshold",
	HandlerType: (*ColumnThresholdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ColumnThresholdCreate",
			Handler:    _ColumnThreshold_ColumnThresholdCreate_Handler,
		},
		{
			MethodName: "ColumnThresholdDelete",
			Handler:    _ColumnThreshold_ColumnThresholdDelete_Handler,
		},
		{
			MethodName: "ColumnThresholdUpdate",
			Handler:    _ColumnThreshold_ColumnThresholdUpdate_Handler,
		},
		{
			MethodName: "ColumnThresholdDetail",
			Handler:    _ColumnThreshold_ColumnThresholdDetail_Handler,
		},
		{
			MethodName: "ColumnThresholdFilter",
			Handler:    _ColumnThreshold_ColumnThresholdFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "columnthreshold.proto",
}

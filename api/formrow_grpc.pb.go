// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.10
// source: formrow.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FormRowServiceClient is the client API for FormRowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FormRowServiceClient interface {
	// 表单行数据数据添加
	FormRowCreate(ctx context.Context, in *FormRowCreateRequest, opts ...grpc.CallOption) (*FormRowCreateResponse, error)
	// 表单行数据数据删除
	FormRowDelete(ctx context.Context, in *FormRowDeleteRequest, opts ...grpc.CallOption) (*FormRowDeleteResponse, error)
	// 表单行数据数据更新
	FormRowUpdate(ctx context.Context, in *FormRowUpdateRequest, opts ...grpc.CallOption) (*FormRowUpdateResponse, error)
	// 表单行数据数据详情查询
	FormRowDetail(ctx context.Context, in *FormRowDetailRequest, opts ...grpc.CallOption) (*FormRowDetailResponse, error)
	// 表单行数据数据过滤查询
	FormRowFilter(ctx context.Context, in *FormRowFilterRequest, opts ...grpc.CallOption) (*FormRowFilterResponse, error)
}

type formRowServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFormRowServiceClient(cc grpc.ClientConnInterface) FormRowServiceClient {
	return &formRowServiceClient{cc}
}

func (c *formRowServiceClient) FormRowCreate(ctx context.Context, in *FormRowCreateRequest, opts ...grpc.CallOption) (*FormRowCreateResponse, error) {
	out := new(FormRowCreateResponse)
	err := c.cc.Invoke(ctx, "/api.FormRowService/FormRowCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formRowServiceClient) FormRowDelete(ctx context.Context, in *FormRowDeleteRequest, opts ...grpc.CallOption) (*FormRowDeleteResponse, error) {
	out := new(FormRowDeleteResponse)
	err := c.cc.Invoke(ctx, "/api.FormRowService/FormRowDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formRowServiceClient) FormRowUpdate(ctx context.Context, in *FormRowUpdateRequest, opts ...grpc.CallOption) (*FormRowUpdateResponse, error) {
	out := new(FormRowUpdateResponse)
	err := c.cc.Invoke(ctx, "/api.FormRowService/FormRowUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formRowServiceClient) FormRowDetail(ctx context.Context, in *FormRowDetailRequest, opts ...grpc.CallOption) (*FormRowDetailResponse, error) {
	out := new(FormRowDetailResponse)
	err := c.cc.Invoke(ctx, "/api.FormRowService/FormRowDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formRowServiceClient) FormRowFilter(ctx context.Context, in *FormRowFilterRequest, opts ...grpc.CallOption) (*FormRowFilterResponse, error) {
	out := new(FormRowFilterResponse)
	err := c.cc.Invoke(ctx, "/api.FormRowService/FormRowFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FormRowServiceServer is the server API for FormRowService service.
// All implementations must embed UnimplementedFormRowServiceServer
// for forward compatibility
type FormRowServiceServer interface {
	// 表单行数据数据添加
	FormRowCreate(context.Context, *FormRowCreateRequest) (*FormRowCreateResponse, error)
	// 表单行数据数据删除
	FormRowDelete(context.Context, *FormRowDeleteRequest) (*FormRowDeleteResponse, error)
	// 表单行数据数据更新
	FormRowUpdate(context.Context, *FormRowUpdateRequest) (*FormRowUpdateResponse, error)
	// 表单行数据数据详情查询
	FormRowDetail(context.Context, *FormRowDetailRequest) (*FormRowDetailResponse, error)
	// 表单行数据数据过滤查询
	FormRowFilter(context.Context, *FormRowFilterRequest) (*FormRowFilterResponse, error)
	mustEmbedUnimplementedFormRowServiceServer()
}

// UnimplementedFormRowServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFormRowServiceServer struct {
}

func (UnimplementedFormRowServiceServer) FormRowCreate(context.Context, *FormRowCreateRequest) (*FormRowCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormRowCreate not implemented")
}
func (UnimplementedFormRowServiceServer) FormRowDelete(context.Context, *FormRowDeleteRequest) (*FormRowDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormRowDelete not implemented")
}
func (UnimplementedFormRowServiceServer) FormRowUpdate(context.Context, *FormRowUpdateRequest) (*FormRowUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormRowUpdate not implemented")
}
func (UnimplementedFormRowServiceServer) FormRowDetail(context.Context, *FormRowDetailRequest) (*FormRowDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormRowDetail not implemented")
}
func (UnimplementedFormRowServiceServer) FormRowFilter(context.Context, *FormRowFilterRequest) (*FormRowFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormRowFilter not implemented")
}
func (UnimplementedFormRowServiceServer) mustEmbedUnimplementedFormRowServiceServer() {}

// UnsafeFormRowServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FormRowServiceServer will
// result in compilation errors.
type UnsafeFormRowServiceServer interface {
	mustEmbedUnimplementedFormRowServiceServer()
}

func RegisterFormRowServiceServer(s grpc.ServiceRegistrar, srv FormRowServiceServer) {
	s.RegisterService(&FormRowService_ServiceDesc, srv)
}

func _FormRowService_FormRowCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormRowCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormRowServiceServer).FormRowCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FormRowService/FormRowCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormRowServiceServer).FormRowCreate(ctx, req.(*FormRowCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FormRowService_FormRowDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormRowDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormRowServiceServer).FormRowDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FormRowService/FormRowDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormRowServiceServer).FormRowDelete(ctx, req.(*FormRowDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FormRowService_FormRowUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormRowUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormRowServiceServer).FormRowUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FormRowService/FormRowUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormRowServiceServer).FormRowUpdate(ctx, req.(*FormRowUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FormRowService_FormRowDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormRowDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormRowServiceServer).FormRowDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FormRowService/FormRowDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormRowServiceServer).FormRowDetail(ctx, req.(*FormRowDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FormRowService_FormRowFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormRowFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormRowServiceServer).FormRowFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.FormRowService/FormRowFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormRowServiceServer).FormRowFilter(ctx, req.(*FormRowFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FormRowService_ServiceDesc is the grpc.ServiceDesc for FormRowService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FormRowService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.FormRowService",
	HandlerType: (*FormRowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FormRowCreate",
			Handler:    _FormRowService_FormRowCreate_Handler,
		},
		{
			MethodName: "FormRowDelete",
			Handler:    _FormRowService_FormRowDelete_Handler,
		},
		{
			MethodName: "FormRowUpdate",
			Handler:    _FormRowService_FormRowUpdate_Handler,
		},
		{
			MethodName: "FormRowDetail",
			Handler:    _FormRowService_FormRowDetail_Handler,
		},
		{
			MethodName: "FormRowFilter",
			Handler:    _FormRowService_FormRowFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "formrow.proto",
}

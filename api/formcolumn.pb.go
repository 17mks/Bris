// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: formcolumn.proto

package api

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Formcolumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	CreateTime     string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DataType       string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	GroupName      string `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Id             string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,9,opt,name=regexp,proto3" json:"regexp,omitempty"`
	SortIndex      int32  `protobuf:"varint,10,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,11,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	UpdateTime     string `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ViewType       string `protobuf:"bytes,13,opt,name=viewType,proto3" json:"viewType,omitempty"`
	Required       bool   `protobuf:"varint,14,opt,name=required,proto3" json:"required,omitempty"`
	Visible        bool   `protobuf:"varint,15,opt,name=visible,proto3" json:"visible,omitempty"`
	Editable       bool   `protobuf:"varint,16,opt,name=editable,proto3" json:"editable,omitempty"`
	DeletedAt      string `protobuf:"bytes,17,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *Formcolumns) Reset() {
	*x = Formcolumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Formcolumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Formcolumns) ProtoMessage() {}

func (x *Formcolumns) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Formcolumns.ProtoReflect.Descriptor instead.
func (*Formcolumns) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{0}
}

func (x *Formcolumns) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Formcolumns) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Formcolumns) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Formcolumns) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Formcolumns) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Formcolumns) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Formcolumns) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Formcolumns) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Formcolumns) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Formcolumns) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Formcolumns) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Formcolumns) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Formcolumns) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

func (x *Formcolumns) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Formcolumns) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Formcolumns) GetEditable() bool {
	if x != nil {
		return x.Editable
	}
	return false
}

func (x *Formcolumns) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type Form_ColumnCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	DataType       string `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GroupName      string `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,7,opt,name=regexp,proto3" json:"regexp,omitempty"`
	SortIndex      int32  `protobuf:"varint,8,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,9,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	ViewType       string `protobuf:"bytes,10,opt,name=viewType,proto3" json:"viewType,omitempty"`
}

func (x *Form_ColumnCreateRequest) Reset() {
	*x = Form_ColumnCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnCreateRequest) ProtoMessage() {}

func (x *Form_ColumnCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnCreateRequest.ProtoReflect.Descriptor instead.
func (*Form_ColumnCreateRequest) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{1}
}

func (x *Form_ColumnCreateRequest) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Form_ColumnCreateRequest) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Form_ColumnCreateRequest) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

type Form_ColumnCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Form_ColumnCreateResponse) Reset() {
	*x = Form_ColumnCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnCreateResponse) ProtoMessage() {}

func (x *Form_ColumnCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnCreateResponse.ProtoReflect.Descriptor instead.
func (*Form_ColumnCreateResponse) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{2}
}

func (x *Form_ColumnCreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Form_ColumnDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Form_ColumnDeleteRequest) Reset() {
	*x = Form_ColumnDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnDeleteRequest) ProtoMessage() {}

func (x *Form_ColumnDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnDeleteRequest.ProtoReflect.Descriptor instead.
func (*Form_ColumnDeleteRequest) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{3}
}

func (x *Form_ColumnDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Form_ColumnDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Form_ColumnDeleteResponse) Reset() {
	*x = Form_ColumnDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnDeleteResponse) ProtoMessage() {}

func (x *Form_ColumnDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnDeleteResponse.ProtoReflect.Descriptor instead.
func (*Form_ColumnDeleteResponse) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{4}
}

func (x *Form_ColumnDeleteResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Form_ColumnUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	DataType       string `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GroupName      string `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,7,opt,name=regexp,proto3" json:"regexp,omitempty"`
	SortIndex      int32  `protobuf:"varint,8,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,9,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	ViewType       string `protobuf:"bytes,10,opt,name=viewType,proto3" json:"viewType,omitempty"`
}

func (x *Form_ColumnUpdateRequest) Reset() {
	*x = Form_ColumnUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnUpdateRequest) ProtoMessage() {}

func (x *Form_ColumnUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnUpdateRequest.ProtoReflect.Descriptor instead.
func (*Form_ColumnUpdateRequest) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{5}
}

func (x *Form_ColumnUpdateRequest) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Form_ColumnUpdateRequest) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Form_ColumnUpdateRequest) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

type Form_ColumnUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	CreateTime     string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DataType       string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	GroupName      string `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Id             string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,9,opt,name=regexp,proto3" json:"regexp,omitempty"`
	SortIndex      int32  `protobuf:"varint,10,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,11,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	UpdateTime     string `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ViewType       string `protobuf:"bytes,13,opt,name=viewType,proto3" json:"viewType,omitempty"`
}

func (x *Form_ColumnUpdateResponse) Reset() {
	*x = Form_ColumnUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnUpdateResponse) ProtoMessage() {}

func (x *Form_ColumnUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnUpdateResponse.ProtoReflect.Descriptor instead.
func (*Form_ColumnUpdateResponse) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{6}
}

func (x *Form_ColumnUpdateResponse) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Form_ColumnUpdateResponse) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Form_ColumnUpdateResponse) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

type Form_ColumnDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Form_ColumnDetailRequest) Reset() {
	*x = Form_ColumnDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnDetailRequest) ProtoMessage() {}

func (x *Form_ColumnDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnDetailRequest.ProtoReflect.Descriptor instead.
func (*Form_ColumnDetailRequest) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{7}
}

func (x *Form_ColumnDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Form_ColumnDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column           *Form_ColumnDetailResponse_Column `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	ColumnThresholds []*Columnthresholds               `protobuf:"bytes,2,rep,name=columnThresholds,proto3" json:"columnThresholds,omitempty"`
	ColumnOpts       []*Columnopts                     `protobuf:"bytes,3,rep,name=columnOpts,proto3" json:"columnOpts,omitempty"`
}

func (x *Form_ColumnDetailResponse) Reset() {
	*x = Form_ColumnDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnDetailResponse) ProtoMessage() {}

func (x *Form_ColumnDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnDetailResponse.ProtoReflect.Descriptor instead.
func (*Form_ColumnDetailResponse) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{8}
}

func (x *Form_ColumnDetailResponse) GetColumn() *Form_ColumnDetailResponse_Column {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *Form_ColumnDetailResponse) GetColumnThresholds() []*Columnthresholds {
	if x != nil {
		return x.ColumnThresholds
	}
	return nil
}

func (x *Form_ColumnDetailResponse) GetColumnOpts() []*Columnopts {
	if x != nil {
		return x.ColumnOpts
	}
	return nil
}

type Form_ColumnFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  *Form_ColumnFilterRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Page    int32                            `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int32                            `protobuf:"varint,3,opt,name=perPage,proto3" json:"perPage,omitempty"`
}

func (x *Form_ColumnFilterRequest) Reset() {
	*x = Form_ColumnFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnFilterRequest) ProtoMessage() {}

func (x *Form_ColumnFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnFilterRequest.ProtoReflect.Descriptor instead.
func (*Form_ColumnFilterRequest) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{9}
}

func (x *Form_ColumnFilterRequest) GetFilter() *Form_ColumnFilterRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Form_ColumnFilterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Form_ColumnFilterRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type Form_ColumnFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32                                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int32                                `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Results []*Form_ColumnFilterResponse_Results `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                                `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Form_ColumnFilterResponse) Reset() {
	*x = Form_ColumnFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnFilterResponse) ProtoMessage() {}

func (x *Form_ColumnFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnFilterResponse.ProtoReflect.Descriptor instead.
func (*Form_ColumnFilterResponse) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{10}
}

func (x *Form_ColumnFilterResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Form_ColumnFilterResponse) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Form_ColumnFilterResponse) GetResults() []*Form_ColumnFilterResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Form_ColumnFilterResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Form_ColumnDetailResponse_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	CreateTime     string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DataType       string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Editable       bool   `protobuf:"varint,6,opt,name=editable,proto3" json:"editable,omitempty"`
	GroupName      string `protobuf:"bytes,7,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Id             string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,10,opt,name=regexp,proto3" json:"regexp,omitempty"`
	Required       bool   `protobuf:"varint,11,opt,name=required,proto3" json:"required,omitempty"`
	SortIndex      int32  `protobuf:"varint,12,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,13,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	UpdateTime     string `protobuf:"bytes,14,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ViewType       string `protobuf:"bytes,15,opt,name=viewType,proto3" json:"viewType,omitempty"`
	Visible        bool   `protobuf:"varint,16,opt,name=visible,proto3" json:"visible,omitempty"`
}

func (x *Form_ColumnDetailResponse_Column) Reset() {
	*x = Form_ColumnDetailResponse_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnDetailResponse_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnDetailResponse_Column) ProtoMessage() {}

func (x *Form_ColumnDetailResponse_Column) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnDetailResponse_Column.ProtoReflect.Descriptor instead.
func (*Form_ColumnDetailResponse_Column) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Form_ColumnDetailResponse_Column) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetEditable() bool {
	if x != nil {
		return x.Editable
	}
	return false
}

func (x *Form_ColumnDetailResponse_Column) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Form_ColumnDetailResponse_Column) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Form_ColumnDetailResponse_Column) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

func (x *Form_ColumnDetailResponse_Column) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

type Form_ColumnFilterRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Key string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Form_ColumnFilterRequest_Filter) Reset() {
	*x = Form_ColumnFilterRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnFilterRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnFilterRequest_Filter) ProtoMessage() {}

func (x *Form_ColumnFilterRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnFilterRequest_Filter.ProtoReflect.Descriptor instead.
func (*Form_ColumnFilterRequest_Filter) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Form_ColumnFilterRequest_Filter) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Form_ColumnFilterRequest_Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Form_ColumnFilterResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableValue string `protobuf:"bytes,1,opt,name=availableValue,proto3" json:"availableValue,omitempty"`
	CreateTime     string `protobuf:"bytes,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DataType       string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DefaultValue   string `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description    string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	GroupName      string `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Id             string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Regexp         string `protobuf:"bytes,9,opt,name=regexp,proto3" json:"regexp,omitempty"`
	SortIndex      int32  `protobuf:"varint,10,opt,name=sortIndex,proto3" json:"sortIndex,omitempty"`
	TbFormId       string `protobuf:"bytes,11,opt,name=tbFormId,proto3" json:"tbFormId,omitempty"`
	UpdateTime     string `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	ViewType       string `protobuf:"bytes,13,opt,name=viewType,proto3" json:"viewType,omitempty"`
}

func (x *Form_ColumnFilterResponse_Results) Reset() {
	*x = Form_ColumnFilterResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_formcolumn_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Form_ColumnFilterResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form_ColumnFilterResponse_Results) ProtoMessage() {}

func (x *Form_ColumnFilterResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_formcolumn_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form_ColumnFilterResponse_Results.ProtoReflect.Descriptor instead.
func (*Form_ColumnFilterResponse_Results) Descriptor() ([]byte, []int) {
	return file_formcolumn_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Form_ColumnFilterResponse_Results) GetAvailableValue() string {
	if x != nil {
		return x.AvailableValue
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetSortIndex() int32 {
	if x != nil {
		return x.SortIndex
	}
	return 0
}

func (x *Form_ColumnFilterResponse_Results) GetTbFormId() string {
	if x != nil {
		return x.TbFormId
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Form_ColumnFilterResponse_Results) GetViewType() string {
	if x != nil {
		return x.ViewType
	}
	return ""
}

var File_formcolumn_proto protoreflect.FileDescriptor

var file_formcolumn_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x6f, 0x72, 0x6d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x6f, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x03, 0x0a, 0x0b,
	0x46, 0x6f, 0x72, 0x6d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65,
	0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc4, 0x02, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a, 0x19,
	0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x46, 0x6f, 0x72,
	0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x03, 0x0a, 0x19, 0x46, 0x6f,
	0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x46,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x46,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x2a, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa5, 0x05,
	0x0a, 0x19, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x2f, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6f, 0x70,
	0x74, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x70, 0x74, 0x73, 0x1a, 0xd4,
	0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x2c,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa7, 0x04, 0x0a,
	0x19, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x1a, 0x83, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65,
	0x78, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x62, 0x46, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x32, 0xc6, 0x05, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x5f,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x5f,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x17, 0x12, 0x15, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe5,
	0x88, 0x97, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0xb7, 0xbb, 0xe5, 0x8a, 0xa0, 0x12, 0x87,
	0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xba, 0x47,
	0x17, 0x12, 0x15, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe5, 0x88, 0x97, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72,
	0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x1a, 0x0c, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x3a, 0x01, 0x2a, 0xba, 0x47, 0x17, 0x12, 0x15, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d,
	0x95, 0xe5, 0x88, 0x97, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0,
	0x12, 0x87, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0xba, 0x47, 0x17, 0x12, 0x15, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe5, 0x88, 0x97, 0xe6, 0x95,
	0xb0, 0xe6, 0x8d, 0xae, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x12, 0x92, 0x01, 0x0a, 0x11, 0x46,
	0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x5f, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0xba,
	0x47, 0x1d, 0x12, 0x1b, 0xe8, 0xa1, 0xa8, 0xe5, 0x8d, 0x95, 0xe5, 0x88, 0x97, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe6, 0x9f, 0xa5, 0xe8, 0xaf, 0xa2, 0x42,
	0x0e, 0x5a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x75, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_formcolumn_proto_rawDescOnce sync.Once
	file_formcolumn_proto_rawDescData = file_formcolumn_proto_rawDesc
)

func file_formcolumn_proto_rawDescGZIP() []byte {
	file_formcolumn_proto_rawDescOnce.Do(func() {
		file_formcolumn_proto_rawDescData = protoimpl.X.CompressGZIP(file_formcolumn_proto_rawDescData)
	})
	return file_formcolumn_proto_rawDescData
}

var file_formcolumn_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_formcolumn_proto_goTypes = []interface{}{
	(*Formcolumns)(nil),                       // 0: api.Formcolumns
	(*Form_ColumnCreateRequest)(nil),          // 1: api.Form_ColumnCreateRequest
	(*Form_ColumnCreateResponse)(nil),         // 2: api.Form_ColumnCreateResponse
	(*Form_ColumnDeleteRequest)(nil),          // 3: api.Form_ColumnDeleteRequest
	(*Form_ColumnDeleteResponse)(nil),         // 4: api.Form_ColumnDeleteResponse
	(*Form_ColumnUpdateRequest)(nil),          // 5: api.Form_ColumnUpdateRequest
	(*Form_ColumnUpdateResponse)(nil),         // 6: api.Form_ColumnUpdateResponse
	(*Form_ColumnDetailRequest)(nil),          // 7: api.Form_ColumnDetailRequest
	(*Form_ColumnDetailResponse)(nil),         // 8: api.Form_ColumnDetailResponse
	(*Form_ColumnFilterRequest)(nil),          // 9: api.Form_ColumnFilterRequest
	(*Form_ColumnFilterResponse)(nil),         // 10: api.Form_ColumnFilterResponse
	(*Form_ColumnDetailResponse_Column)(nil),  // 11: api.Form_ColumnDetailResponse.Column
	(*Form_ColumnFilterRequest_Filter)(nil),   // 12: api.Form_ColumnFilterRequest.Filter
	(*Form_ColumnFilterResponse_Results)(nil), // 13: api.Form_ColumnFilterResponse.Results
	(*Columnthresholds)(nil),                  // 14: api.Columnthresholds
	(*Columnopts)(nil),                        // 15: api.Columnopts
}
var file_formcolumn_proto_depIdxs = []int32{
	11, // 0: api.Form_ColumnDetailResponse.column:type_name -> api.Form_ColumnDetailResponse.Column
	14, // 1: api.Form_ColumnDetailResponse.columnThresholds:type_name -> api.Columnthresholds
	15, // 2: api.Form_ColumnDetailResponse.columnOpts:type_name -> api.Columnopts
	12, // 3: api.Form_ColumnFilterRequest.filter:type_name -> api.Form_ColumnFilterRequest.Filter
	13, // 4: api.Form_ColumnFilterResponse.results:type_name -> api.Form_ColumnFilterResponse.Results
	1,  // 5: api.Form_Column.Form_ColumnCreate:input_type -> api.Form_ColumnCreateRequest
	3,  // 6: api.Form_Column.Form_ColumnDelete:input_type -> api.Form_ColumnDeleteRequest
	5,  // 7: api.Form_Column.Form_ColumnUpdate:input_type -> api.Form_ColumnUpdateRequest
	7,  // 8: api.Form_Column.Form_ColumnDetail:input_type -> api.Form_ColumnDetailRequest
	9,  // 9: api.Form_Column.Form_ColumnFilter:input_type -> api.Form_ColumnFilterRequest
	2,  // 10: api.Form_Column.Form_ColumnCreate:output_type -> api.Form_ColumnCreateResponse
	4,  // 11: api.Form_Column.Form_ColumnDelete:output_type -> api.Form_ColumnDeleteResponse
	6,  // 12: api.Form_Column.Form_ColumnUpdate:output_type -> api.Form_ColumnUpdateResponse
	8,  // 13: api.Form_Column.Form_ColumnDetail:output_type -> api.Form_ColumnDetailResponse
	10, // 14: api.Form_Column.Form_ColumnFilter:output_type -> api.Form_ColumnFilterResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_formcolumn_proto_init() }
func file_formcolumn_proto_init() {
	if File_formcolumn_proto != nil {
		return
	}
	file_columnthreshold_proto_init()
	file_columnopt_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_formcolumn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Formcolumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnDetailResponse_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnFilterRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_formcolumn_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Form_ColumnFilterResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_formcolumn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_formcolumn_proto_goTypes,
		DependencyIndexes: file_formcolumn_proto_depIdxs,
		MessageInfos:      file_formcolumn_proto_msgTypes,
	}.Build()
	File_formcolumn_proto = out.File
	file_formcolumn_proto_rawDesc = nil
	file_formcolumn_proto_goTypes = nil
	file_formcolumn_proto_depIdxs = nil
}
